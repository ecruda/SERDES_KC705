////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 3.6
//  \   \         Application : 7 Series FPGAs Transceivers Wizard 
//  /   /         Filename : gtwizard_0_exdes.v
// /___/   /\     
// \   \  /  \ 
//  \___\/\___\ 
//
//
// Module gtwizard_0_exdes
// Generated by Xilinx 7 Series FPGAs Transceivers Wizard
// 
// 
// (c) Copyright 2010-2012 Xilinx, Inc. All rights reserved.
// 
// This file contains confidential and proprietary information
// of Xilinx, Inc. and is protected under U.S. and
// international copyright and other intellectual property
// laws.
// 
// DISCLAIMER
// This disclaimer is not a license and does not grant any
// rights to the materials distributed herewith. Except as
// otherwise provided in a valid license issued to you by
// Xilinx, and to the maximum extent permitted by applicable
// law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
// WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
// AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
// BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
// INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
// (2) Xilinx shall not be liable (whether in contract or tort,
// including negligence, or under any other theory of
// liability) for any loss or damage of any kind or nature
// related to, arising under or in connection with these
// materials, including for any direct, or any indirect,
// special, incidental, or consequential loss or damage
// (including loss of data, profits, goodwill, or any type of
// loss or damage suffered as a result of any action brought
// by a third party) even if such damage or loss was
// reasonably foreseeable or Xilinx had been advised of the
// possibility of the same.
// 
// CRITICAL APPLICATIONS
// Xilinx products are not designed or intended to be fail-
// safe, or for use in any application requiring fail-safe
// performance, such as life-support or safety devices or
// systems, Class III medical devices, nuclear facilities,
// applications related to the deployment of airbags, or any
// other applications that could lead to death, personal
// injury, or severe property or environmental damage
// (individually and collectively, "Critical
// Applications"). Customer assumes the sole risk and
// liability of any use of Xilinx products in Critical
// Applications, subject only to applicable laws and
// regulations governing limitations on product liability.
// 
// THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
// PART OF THIS FILE AT ALL TIMES. 


`timescale 1ns / 1ps
`define DLY #1

(* DowngradeIPIdentifiedWarnings="yes" *)
//***********************************Entity Declaration************************
(* CORE_GENERATION_INFO = "gtwizard_0,gtwizard_v3_6_10,{protocol_file=Start_from_scratch}" *)
module gtwizard_0_exdes #
(
    parameter EXAMPLE_CONFIG_INDEPENDENT_LANES     =   1,//configuration for frame gen and check
    parameter EXAMPLE_LANE_WITH_START_CHAR         =   0,         // specifies lane with unique start frame char
    parameter EXAMPLE_WORDS_IN_BRAM                =   512,       // specifies amount of data in BRAM
    parameter EXAMPLE_SIM_GTRESET_SPEEDUP          =   "TRUE",    // simulation setting for GT SecureIP model
    parameter EXAMPLE_USE_CHIPSCOPE                =   0,         // Set to 1 to use Chipscope to drive resets
    parameter STABLE_CLOCK_PERIOD                  = 10

)
(
    input wire  Q0_CLK1_GTREFCLK_PAD_N_IN,
    input wire  Q0_CLK1_GTREFCLK_PAD_P_IN,
    input wire  DRPCLK_IN,
//    input wire  DRP_CLK_IN_N,
    output wire TRACK_DATA_OUT,
    input  wire [6:0]   RXN_IN,
    input  wire [6:0]   RXP_IN,
    output wire [6:0]   TXN_OUT,
    output wire [6:0]   TXP_OUT,
    input  wire [31:0]  gt0_txdata_i,
    output wire [31:0]  gt0_rxdata_i,
    input  wire [31:0]  gt1_txdata_i,
    output wire [31:0]  gt1_rxdata_i,
    input  wire [31:0]  gt2_txdata_i,
    output wire [31:0]  gt2_rxdata_i,
    input  wire [31:0]  gt3_txdata_i,
    output wire [31:0]  gt3_rxdata_i,
    input  wire [31:0]  gt4_txdata_i,
    output wire [31:0]  gt4_rxdata_i,
    input  wire [31:0]  gt5_txdata_i,
    output wire [31:0]  gt5_rxdata_i,
    input  wire [31:0]  gt6_txdata_i,
    output wire [31:0]  gt6_rxdata_i,
    output wire         gt0_txusrclk2_i,
    output wire         gt0_rxusrclk2_i,
    output wire         gt1_txusrclk2_i,
    output wire         gt1_rxusrclk2_i, 
    output wire         gt2_txusrclk2_i,
    output wire         gt2_rxusrclk2_i,
    output wire         gt3_txusrclk2_i,
    output wire         gt3_rxusrclk2_i, 
    output wire         gt4_txusrclk2_i,
    output wire         gt4_rxusrclk2_i, 
    output wire         gt5_txusrclk2_i,
    output wire         gt5_rxusrclk2_i,
    output wire         gt6_txusrclk2_i,
    output wire         gt6_rxusrclk2_i  
);

    wire soft_reset_i;
    (*mark_debug = "TRUE" *) wire soft_reset_vio_i;

//************************** Register Declarations ****************************

    wire            gt_txfsmresetdone_i;
    wire            gt_rxfsmresetdone_i;
    (* ASYNC_REG = "TRUE" *)reg             gt_txfsmresetdone_r;
    (* ASYNC_REG = "TRUE" *)reg             gt_txfsmresetdone_r2;
    wire            gt0_txfsmresetdone_i;
    wire            gt0_rxfsmresetdone_i;
    (* ASYNC_REG = "TRUE" *)reg             gt0_txfsmresetdone_r;
    (* ASYNC_REG = "TRUE" *)reg             gt0_txfsmresetdone_r2;
    (* ASYNC_REG = "TRUE" *)reg             gt0_rxfsmresetdone_r;
    (* ASYNC_REG = "TRUE" *)reg             gt0_rxfsmresetdone_r2;
    (* ASYNC_REG = "TRUE" *)reg             gt0_rxresetdone_r;
    (* ASYNC_REG = "TRUE" *)reg             gt0_rxresetdone_r2;
    (* ASYNC_REG = "TRUE" *)reg             gt0_rxresetdone_r3;
    (* ASYNC_REG = "TRUE" *)reg             gt0_rxresetdone_vio_r;
    (* ASYNC_REG = "TRUE" *)reg             gt0_rxresetdone_vio_r2;
    (* ASYNC_REG = "TRUE" *)reg             gt0_rxresetdone_vio_r3;

    wire            gt1_txfsmresetdone_i;
    wire            gt1_rxfsmresetdone_i;
    (* ASYNC_REG = "TRUE" *)reg             gt1_txfsmresetdone_r;
    (* ASYNC_REG = "TRUE" *)reg             gt1_txfsmresetdone_r2;
    (* ASYNC_REG = "TRUE" *)reg             gt1_rxfsmresetdone_r;
    (* ASYNC_REG = "TRUE" *)reg             gt1_rxfsmresetdone_r2;
    (* ASYNC_REG = "TRUE" *)reg             gt1_rxresetdone_r;
    (* ASYNC_REG = "TRUE" *)reg             gt1_rxresetdone_r2;
    (* ASYNC_REG = "TRUE" *)reg             gt1_rxresetdone_r3;
    (* ASYNC_REG = "TRUE" *)reg             gt1_rxresetdone_vio_r;
    (* ASYNC_REG = "TRUE" *)reg             gt1_rxresetdone_vio_r2;
    (* ASYNC_REG = "TRUE" *)reg             gt1_rxresetdone_vio_r3;

    wire            gt2_txfsmresetdone_i;
    wire            gt2_rxfsmresetdone_i;
    (* ASYNC_REG = "TRUE" *)reg             gt2_txfsmresetdone_r;
    (* ASYNC_REG = "TRUE" *)reg             gt2_txfsmresetdone_r2;
    (* ASYNC_REG = "TRUE" *)reg             gt2_rxfsmresetdone_r;
    (* ASYNC_REG = "TRUE" *)reg             gt2_rxfsmresetdone_r2;
    (* ASYNC_REG = "TRUE" *)reg             gt2_rxresetdone_r;
    (* ASYNC_REG = "TRUE" *)reg             gt2_rxresetdone_r2;
    (* ASYNC_REG = "TRUE" *)reg             gt2_rxresetdone_r3;
    (* ASYNC_REG = "TRUE" *)reg             gt2_rxresetdone_vio_r;
    (* ASYNC_REG = "TRUE" *)reg             gt2_rxresetdone_vio_r2;
    (* ASYNC_REG = "TRUE" *)reg             gt2_rxresetdone_vio_r3;

    wire            gt3_txfsmresetdone_i;
    wire            gt3_rxfsmresetdone_i;
    (* ASYNC_REG = "TRUE" *)reg             gt3_txfsmresetdone_r;
    (* ASYNC_REG = "TRUE" *)reg             gt3_txfsmresetdone_r2;
    (* ASYNC_REG = "TRUE" *)reg             gt3_rxfsmresetdone_r;
    (* ASYNC_REG = "TRUE" *)reg             gt3_rxfsmresetdone_r2;
    (* ASYNC_REG = "TRUE" *)reg             gt3_rxresetdone_r;
    (* ASYNC_REG = "TRUE" *)reg             gt3_rxresetdone_r2;
    (* ASYNC_REG = "TRUE" *)reg             gt3_rxresetdone_r3;
    (* ASYNC_REG = "TRUE" *)reg             gt3_rxresetdone_vio_r;
    (* ASYNC_REG = "TRUE" *)reg             gt3_rxresetdone_vio_r2;
    (* ASYNC_REG = "TRUE" *)reg             gt3_rxresetdone_vio_r3;

    wire            gt4_txfsmresetdone_i;
    wire            gt4_rxfsmresetdone_i;
    (* ASYNC_REG = "TRUE" *)reg             gt4_txfsmresetdone_r;
    (* ASYNC_REG = "TRUE" *)reg             gt4_txfsmresetdone_r2;
    (* ASYNC_REG = "TRUE" *)reg             gt4_rxfsmresetdone_r;
    (* ASYNC_REG = "TRUE" *)reg             gt4_rxfsmresetdone_r2;
    (* ASYNC_REG = "TRUE" *)reg             gt4_rxresetdone_r;
    (* ASYNC_REG = "TRUE" *)reg             gt4_rxresetdone_r2;
    (* ASYNC_REG = "TRUE" *)reg             gt4_rxresetdone_r3;
    (* ASYNC_REG = "TRUE" *)reg             gt4_rxresetdone_vio_r;
    (* ASYNC_REG = "TRUE" *)reg             gt4_rxresetdone_vio_r2;
    (* ASYNC_REG = "TRUE" *)reg             gt4_rxresetdone_vio_r3;

    wire            gt5_txfsmresetdone_i;
    wire            gt5_rxfsmresetdone_i;
    (* ASYNC_REG = "TRUE" *)reg             gt5_txfsmresetdone_r;
    (* ASYNC_REG = "TRUE" *)reg             gt5_txfsmresetdone_r2;
    (* ASYNC_REG = "TRUE" *)reg             gt5_rxfsmresetdone_r;
    (* ASYNC_REG = "TRUE" *)reg             gt5_rxfsmresetdone_r2;
    (* ASYNC_REG = "TRUE" *)reg             gt5_rxresetdone_r;
    (* ASYNC_REG = "TRUE" *)reg             gt5_rxresetdone_r2;
    (* ASYNC_REG = "TRUE" *)reg             gt5_rxresetdone_r3;
    (* ASYNC_REG = "TRUE" *)reg             gt5_rxresetdone_vio_r;
    (* ASYNC_REG = "TRUE" *)reg             gt5_rxresetdone_vio_r2;
    (* ASYNC_REG = "TRUE" *)reg             gt5_rxresetdone_vio_r3;

    wire            gt6_txfsmresetdone_i;
    wire            gt6_rxfsmresetdone_i;
    (* ASYNC_REG = "TRUE" *)reg             gt6_txfsmresetdone_r;
    (* ASYNC_REG = "TRUE" *)reg             gt6_txfsmresetdone_r2;
    (* ASYNC_REG = "TRUE" *)reg             gt6_rxfsmresetdone_r;
    (* ASYNC_REG = "TRUE" *)reg             gt6_rxfsmresetdone_r2;
    (* ASYNC_REG = "TRUE" *)reg             gt6_rxresetdone_r;
    (* ASYNC_REG = "TRUE" *)reg             gt6_rxresetdone_r2;
    (* ASYNC_REG = "TRUE" *)reg             gt6_rxresetdone_r3;
    (* ASYNC_REG = "TRUE" *)reg             gt6_rxresetdone_vio_r;
    (* ASYNC_REG = "TRUE" *)reg             gt6_rxresetdone_vio_r2;
    (* ASYNC_REG = "TRUE" *)reg             gt6_rxresetdone_vio_r3;

    reg [5:0] reset_counter = 0;
    reg     [3:0]   reset_pulse;

//**************************** Wire Declarations ******************************//
    //------------------------ GT Wrapper Wires ------------------------------
    //________________________________________________________________________
    //________________________________________________________________________
    //GT0  (X1Y0)
    //------------------------------- CPLL Ports -------------------------------
    wire            gt0_cpllfbclklost_i;
    wire            gt0_cplllock_i;
    wire            gt0_cpllrefclklost_i;
    wire            gt0_cpllreset_i;
    //-------------------------- Channel - DRP Ports  --------------------------
    wire    [8:0]   gt0_drpaddr_i;
    wire    [15:0]  gt0_drpdi_i;
    wire    [15:0]  gt0_drpdo_i;
    wire            gt0_drpen_i;
    wire            gt0_drprdy_i;
    wire            gt0_drpwe_i;
    //------------------------- Digital Monitor Ports --------------------------
    wire    [7:0]   gt0_dmonitorout_i;
    //------------------- RX Initialization and Reset Ports --------------------
    wire            gt0_eyescanreset_i;
    wire            gt0_rxuserrdy_i;
    //------------------------ RX Margin Analysis Ports ------------------------
    wire            gt0_eyescandataerror_i;
    wire            gt0_eyescantrigger_i;
    //---------------- Receive Ports - FPGA RX interface Ports -----------------
//    wire    [31:0]  gt0_rxdata_i;
    //------------------------- Receive Ports - RX AFE -------------------------
    wire            gt0_gtxrxp_i;
    //---------------------- Receive Ports - RX AFE Ports ----------------------
    wire            gt0_gtxrxn_i;
    //------------------- Receive Ports - RX Equalizer Ports -------------------
    wire            gt0_rxdfelpmreset_i;
    wire    [6:0]   gt0_rxmonitorout_i;
    wire    [1:0]   gt0_rxmonitorsel_i;
    //------------- Receive Ports - RX Fabric Output Control Ports -------------
    wire            gt0_rxoutclk_i;
    wire            gt0_rxoutclkfabric_i;
    //----------- Receive Ports - RX Initialization and Reset Ports ------------
    wire            gt0_gtrxreset_i;
    wire            gt0_rxpmareset_i;
    //------------ Receive Ports -RX Initialization and Reset Ports ------------
    wire            gt0_rxresetdone_i;
    //------------------- TX Initialization and Reset Ports --------------------
    wire            gt0_gttxreset_i;
    wire            gt0_txuserrdy_i;
    //---------------- Transmit Ports - TX Data Path interface -----------------
//    wire    [31:0]  gt0_txdata_i;
    //-------------- Transmit Ports - TX Driver and OOB signaling --------------
    wire            gt0_gtxtxn_i;
    wire            gt0_gtxtxp_i;
    //--------- Transmit Ports - TX Fabric Clock Output Control Ports ----------
    wire            gt0_txoutclk_i;
    wire            gt0_txoutclkfabric_i;
    wire            gt0_txoutclkpcs_i;
    //----------- Transmit Ports - TX Initialization and Reset Ports -----------
    wire            gt0_txresetdone_i;

    //________________________________________________________________________
    //________________________________________________________________________
    //GT1  (X1Y1)
    //------------------------------- CPLL Ports -------------------------------
    wire            gt1_cpllfbclklost_i;
    wire            gt1_cplllock_i;
    wire            gt1_cpllrefclklost_i;
    wire            gt1_cpllreset_i;
    //-------------------------- Channel - DRP Ports  --------------------------
    wire    [8:0]   gt1_drpaddr_i;
    wire    [15:0]  gt1_drpdi_i;
    wire    [15:0]  gt1_drpdo_i;
    wire            gt1_drpen_i;
    wire            gt1_drprdy_i;
    wire            gt1_drpwe_i;
    //------------------------- Digital Monitor Ports --------------------------
    wire    [7:0]   gt1_dmonitorout_i;
    //------------------- RX Initialization and Reset Ports --------------------
    wire            gt1_eyescanreset_i;
    wire            gt1_rxuserrdy_i;
    //------------------------ RX Margin Analysis Ports ------------------------
    wire            gt1_eyescandataerror_i;
    wire            gt1_eyescantrigger_i;
    //---------------- Receive Ports - FPGA RX interface Ports -----------------
//    wire    [31:0]  gt1_rxdata_i;
    //------------------------- Receive Ports - RX AFE -------------------------
    wire            gt1_gtxrxp_i;
    //---------------------- Receive Ports - RX AFE Ports ----------------------
    wire            gt1_gtxrxn_i;
    //------------------- Receive Ports - RX Equalizer Ports -------------------
    wire            gt1_rxdfelpmreset_i;
    wire    [6:0]   gt1_rxmonitorout_i;
    wire    [1:0]   gt1_rxmonitorsel_i;
    //------------- Receive Ports - RX Fabric Output Control Ports -------------
    wire            gt1_rxoutclk_i;
    wire            gt1_rxoutclkfabric_i;
    //----------- Receive Ports - RX Initialization and Reset Ports ------------
    wire            gt1_gtrxreset_i;
    wire            gt1_rxpmareset_i;
    //------------ Receive Ports -RX Initialization and Reset Ports ------------
    wire            gt1_rxresetdone_i;
    //------------------- TX Initialization and Reset Ports --------------------
    wire            gt1_gttxreset_i;
    wire            gt1_txuserrdy_i;
    //---------------- Transmit Ports - TX Data Path interface -----------------
//    wire    [31:0]  gt1_txdata_i;
    //-------------- Transmit Ports - TX Driver and OOB signaling --------------
    wire            gt1_gtxtxn_i;
    wire            gt1_gtxtxp_i;
    //--------- Transmit Ports - TX Fabric Clock Output Control Ports ----------
    wire            gt1_txoutclk_i;
    wire            gt1_txoutclkfabric_i;
    wire            gt1_txoutclkpcs_i;
    //----------- Transmit Ports - TX Initialization and Reset Ports -----------
    wire            gt1_txresetdone_i;

    //________________________________________________________________________
    //________________________________________________________________________
    //GT2  (X1Y2)
    //------------------------------- CPLL Ports -------------------------------
    wire            gt2_cpllfbclklost_i;
    wire            gt2_cplllock_i;
    wire            gt2_cpllrefclklost_i;
    wire            gt2_cpllreset_i;
    //-------------------------- Channel - DRP Ports  --------------------------
    wire    [8:0]   gt2_drpaddr_i;
    wire    [15:0]  gt2_drpdi_i;
    wire    [15:0]  gt2_drpdo_i;
    wire            gt2_drpen_i;
    wire            gt2_drprdy_i;
    wire            gt2_drpwe_i;
    //------------------------- Digital Monitor Ports --------------------------
    wire    [7:0]   gt2_dmonitorout_i;
    //------------------- RX Initialization and Reset Ports --------------------
    wire            gt2_eyescanreset_i;
    wire            gt2_rxuserrdy_i;
    //------------------------ RX Margin Analysis Ports ------------------------
    wire            gt2_eyescandataerror_i;
    wire            gt2_eyescantrigger_i;
    //---------------- Receive Ports - FPGA RX interface Ports -----------------
//    wire    [31:0]  gt2_rxdata_i;
    //------------------------- Receive Ports - RX AFE -------------------------
    wire            gt2_gtxrxp_i;
    //---------------------- Receive Ports - RX AFE Ports ----------------------
    wire            gt2_gtxrxn_i;
    //------------------- Receive Ports - RX Equalizer Ports -------------------
    wire            gt2_rxdfelpmreset_i;
    wire    [6:0]   gt2_rxmonitorout_i;
    wire    [1:0]   gt2_rxmonitorsel_i;
    //------------- Receive Ports - RX Fabric Output Control Ports -------------
    wire            gt2_rxoutclk_i;
    wire            gt2_rxoutclkfabric_i;
    //----------- Receive Ports - RX Initialization and Reset Ports ------------
    wire            gt2_gtrxreset_i;
    wire            gt2_rxpmareset_i;
    //------------ Receive Ports -RX Initialization and Reset Ports ------------
    wire            gt2_rxresetdone_i;
    //------------------- TX Initialization and Reset Ports --------------------
    wire            gt2_gttxreset_i;
    wire            gt2_txuserrdy_i;
    //---------------- Transmit Ports - TX Data Path interface -----------------
//    wire    [31:0]  gt2_txdata_i;
    //-------------- Transmit Ports - TX Driver and OOB signaling --------------
    wire            gt2_gtxtxn_i;
    wire            gt2_gtxtxp_i;
    //--------- Transmit Ports - TX Fabric Clock Output Control Ports ----------
    wire            gt2_txoutclk_i;
    wire            gt2_txoutclkfabric_i;
    wire            gt2_txoutclkpcs_i;
    //----------- Transmit Ports - TX Initialization and Reset Ports -----------
    wire            gt2_txresetdone_i;

    //________________________________________________________________________
    //________________________________________________________________________
    //GT3  (X1Y3)
    //------------------------------- CPLL Ports -------------------------------
    wire            gt3_cpllfbclklost_i;
    wire            gt3_cplllock_i;
    wire            gt3_cpllrefclklost_i;
    wire            gt3_cpllreset_i;
    //-------------------------- Channel - DRP Ports  --------------------------
    wire    [8:0]   gt3_drpaddr_i;
    wire    [15:0]  gt3_drpdi_i;
    wire    [15:0]  gt3_drpdo_i;
    wire            gt3_drpen_i;
    wire            gt3_drprdy_i;
    wire            gt3_drpwe_i;
    //------------------------- Digital Monitor Ports --------------------------
    wire    [7:0]   gt3_dmonitorout_i;
    //------------------- RX Initialization and Reset Ports --------------------
    wire            gt3_eyescanreset_i;
    wire            gt3_rxuserrdy_i;
    //------------------------ RX Margin Analysis Ports ------------------------
    wire            gt3_eyescandataerror_i;
    wire            gt3_eyescantrigger_i;
    //---------------- Receive Ports - FPGA RX interface Ports -----------------
//    wire    [31:0]  gt3_rxdata_i;
    //------------------------- Receive Ports - RX AFE -------------------------
    wire            gt3_gtxrxp_i;
    //---------------------- Receive Ports - RX AFE Ports ----------------------
    wire            gt3_gtxrxn_i;
    //------------------- Receive Ports - RX Equalizer Ports -------------------
    wire            gt3_rxdfelpmreset_i;
    wire    [6:0]   gt3_rxmonitorout_i;
    wire    [1:0]   gt3_rxmonitorsel_i;
    //------------- Receive Ports - RX Fabric Output Control Ports -------------
    wire            gt3_rxoutclk_i;
    wire            gt3_rxoutclkfabric_i;
    //----------- Receive Ports - RX Initialization and Reset Ports ------------
    wire            gt3_gtrxreset_i;
    wire            gt3_rxpmareset_i;
    //------------ Receive Ports -RX Initialization and Reset Ports ------------
    wire            gt3_rxresetdone_i;
    //------------------- TX Initialization and Reset Ports --------------------
    wire            gt3_gttxreset_i;
    wire            gt3_txuserrdy_i;
    //---------------- Transmit Ports - TX Data Path interface -----------------
//    wire    [31:0]  gt3_txdata_i;
    //-------------- Transmit Ports - TX Driver and OOB signaling --------------
    wire            gt3_gtxtxn_i;
    wire            gt3_gtxtxp_i;
    //--------- Transmit Ports - TX Fabric Clock Output Control Ports ----------
    wire            gt3_txoutclk_i;
    wire            gt3_txoutclkfabric_i;
    wire            gt3_txoutclkpcs_i;
    //----------- Transmit Ports - TX Initialization and Reset Ports -----------
    wire            gt3_txresetdone_i;

    //________________________________________________________________________
    //________________________________________________________________________
    //GT4  (X1Y4)
    //------------------------------- CPLL Ports -------------------------------
    wire            gt4_cpllfbclklost_i;
    wire            gt4_cplllock_i;
    wire            gt4_cpllrefclklost_i;
    wire            gt4_cpllreset_i;
    //-------------------------- Channel - DRP Ports  --------------------------
    wire    [8:0]   gt4_drpaddr_i;
    wire    [15:0]  gt4_drpdi_i;
    wire    [15:0]  gt4_drpdo_i;
    wire            gt4_drpen_i;
    wire            gt4_drprdy_i;
    wire            gt4_drpwe_i;
    //------------------------- Digital Monitor Ports --------------------------
    wire    [7:0]   gt4_dmonitorout_i;
    //------------------- RX Initialization and Reset Ports --------------------
    wire            gt4_eyescanreset_i;
    wire            gt4_rxuserrdy_i;
    //------------------------ RX Margin Analysis Ports ------------------------
    wire            gt4_eyescandataerror_i;
    wire            gt4_eyescantrigger_i;
    //---------------- Receive Ports - FPGA RX interface Ports -----------------
//    wire    [31:0]  gt4_rxdata_i;
    //------------------------- Receive Ports - RX AFE -------------------------
    wire            gt4_gtxrxp_i;
    //---------------------- Receive Ports - RX AFE Ports ----------------------
    wire            gt4_gtxrxn_i;
    //------------------- Receive Ports - RX Equalizer Ports -------------------
    wire            gt4_rxdfelpmreset_i;
    wire    [6:0]   gt4_rxmonitorout_i;
    wire    [1:0]   gt4_rxmonitorsel_i;
    //------------- Receive Ports - RX Fabric Output Control Ports -------------
    wire            gt4_rxoutclk_i;
    wire            gt4_rxoutclkfabric_i;
    //----------- Receive Ports - RX Initialization and Reset Ports ------------
    wire            gt4_gtrxreset_i;
    wire            gt4_rxpmareset_i;
    //------------ Receive Ports -RX Initialization and Reset Ports ------------
    wire            gt4_rxresetdone_i;
    //------------------- TX Initialization and Reset Ports --------------------
    wire            gt4_gttxreset_i;
    wire            gt4_txuserrdy_i;
    //---------------- Transmit Ports - TX Data Path interface -----------------
//    wire    [31:0]  gt4_txdata_i;
    //-------------- Transmit Ports - TX Driver and OOB signaling --------------
    wire            gt4_gtxtxn_i;
    wire            gt4_gtxtxp_i;
    //--------- Transmit Ports - TX Fabric Clock Output Control Ports ----------
    wire            gt4_txoutclk_i;
    wire            gt4_txoutclkfabric_i;
    wire            gt4_txoutclkpcs_i;
    //----------- Transmit Ports - TX Initialization and Reset Ports -----------
    wire            gt4_txresetdone_i;

    //________________________________________________________________________
    //________________________________________________________________________
    //GT5  (X1Y5)
    //------------------------------- CPLL Ports -------------------------------
    wire            gt5_cpllfbclklost_i;
    wire            gt5_cplllock_i;
    wire            gt5_cpllrefclklost_i;
    wire            gt5_cpllreset_i;
    //-------------------------- Channel - DRP Ports  --------------------------
    wire    [8:0]   gt5_drpaddr_i;
    wire    [15:0]  gt5_drpdi_i;
    wire    [15:0]  gt5_drpdo_i;
    wire            gt5_drpen_i;
    wire            gt5_drprdy_i;
    wire            gt5_drpwe_i;
    //------------------------- Digital Monitor Ports --------------------------
    wire    [7:0]   gt5_dmonitorout_i;
    //------------------- RX Initialization and Reset Ports --------------------
    wire            gt5_eyescanreset_i;
    wire            gt5_rxuserrdy_i;
    //------------------------ RX Margin Analysis Ports ------------------------
    wire            gt5_eyescandataerror_i;
    wire            gt5_eyescantrigger_i;
    //---------------- Receive Ports - FPGA RX interface Ports -----------------
//    wire    [31:0]  gt5_rxdata_i;
    //------------------------- Receive Ports - RX AFE -------------------------
    wire            gt5_gtxrxp_i;
    //---------------------- Receive Ports - RX AFE Ports ----------------------
    wire            gt5_gtxrxn_i;
    //------------------- Receive Ports - RX Equalizer Ports -------------------
    wire            gt5_rxdfelpmreset_i;
    wire    [6:0]   gt5_rxmonitorout_i;
    wire    [1:0]   gt5_rxmonitorsel_i;
    //------------- Receive Ports - RX Fabric Output Control Ports -------------
    wire            gt5_rxoutclk_i;
    wire            gt5_rxoutclkfabric_i;
    //----------- Receive Ports - RX Initialization and Reset Ports ------------
    wire            gt5_gtrxreset_i;
    wire            gt5_rxpmareset_i;
    //------------ Receive Ports -RX Initialization and Reset Ports ------------
    wire            gt5_rxresetdone_i;
    //------------------- TX Initialization and Reset Ports --------------------
    wire            gt5_gttxreset_i;
    wire            gt5_txuserrdy_i;
    //---------------- Transmit Ports - TX Data Path interface -----------------
//    wire    [31:0]  gt5_txdata_i;
    //-------------- Transmit Ports - TX Driver and OOB signaling --------------
    wire            gt5_gtxtxn_i;
    wire            gt5_gtxtxp_i;
    //--------- Transmit Ports - TX Fabric Clock Output Control Ports ----------
    wire            gt5_txoutclk_i;
    wire            gt5_txoutclkfabric_i;
    wire            gt5_txoutclkpcs_i;
    //----------- Transmit Ports - TX Initialization and Reset Ports -----------
    wire            gt5_txresetdone_i;

    //________________________________________________________________________
    //________________________________________________________________________
    //GT6  (X1Y6)
    //------------------------------- CPLL Ports -------------------------------
    wire            gt6_cpllfbclklost_i;
    wire            gt6_cplllock_i;
    wire            gt6_cpllrefclklost_i;
    wire            gt6_cpllreset_i;
    //-------------------------- Channel - DRP Ports  --------------------------
    wire    [8:0]   gt6_drpaddr_i;
    wire    [15:0]  gt6_drpdi_i;
    wire    [15:0]  gt6_drpdo_i;
    wire            gt6_drpen_i;
    wire            gt6_drprdy_i;
    wire            gt6_drpwe_i;
    //------------------------- Digital Monitor Ports --------------------------
    wire    [7:0]   gt6_dmonitorout_i;
    //------------------- RX Initialization and Reset Ports --------------------
    wire            gt6_eyescanreset_i;
    wire            gt6_rxuserrdy_i;
    //------------------------ RX Margin Analysis Ports ------------------------
    wire            gt6_eyescandataerror_i;
    wire            gt6_eyescantrigger_i;
    //---------------- Receive Ports - FPGA RX interface Ports -----------------
//    wire    [31:0]  gt6_rxdata_i;
    //------------------------- Receive Ports - RX AFE -------------------------
    wire            gt6_gtxrxp_i;
    //---------------------- Receive Ports - RX AFE Ports ----------------------
    wire            gt6_gtxrxn_i;
    //------------------- Receive Ports - RX Equalizer Ports -------------------
    wire            gt6_rxdfelpmreset_i;
    wire    [6:0]   gt6_rxmonitorout_i;
    wire    [1:0]   gt6_rxmonitorsel_i;
    //------------- Receive Ports - RX Fabric Output Control Ports -------------
    wire            gt6_rxoutclk_i;
    wire            gt6_rxoutclkfabric_i;
    //----------- Receive Ports - RX Initialization and Reset Ports ------------
    wire            gt6_gtrxreset_i;
    wire            gt6_rxpmareset_i;
    //------------ Receive Ports -RX Initialization and Reset Ports ------------
    wire            gt6_rxresetdone_i;
    //------------------- TX Initialization and Reset Ports --------------------
    wire            gt6_gttxreset_i;
    wire            gt6_txuserrdy_i;
    //---------------- Transmit Ports - TX Data Path interface -----------------
//    wire    [31:0]  gt6_txdata_i;
    //-------------- Transmit Ports - TX Driver and OOB signaling --------------
    wire            gt6_gtxtxn_i;
    wire            gt6_gtxtxp_i;
    //--------- Transmit Ports - TX Fabric Clock Output Control Ports ----------
    wire            gt6_txoutclk_i;
    wire            gt6_txoutclkfabric_i;
    wire            gt6_txoutclkpcs_i;
    //----------- Transmit Ports - TX Initialization and Reset Ports -----------
    wire            gt6_txresetdone_i;

    //____________________________COMMON PORTS________________________________
    //-------------------- Common Block  - Ref Clock Ports ---------------------
    wire            gt0_gtrefclk1_common_i;
    //----------------------- Common Block - QPLL Ports ------------------------
    wire            gt0_qplllock_i;
    wire            gt0_qpllrefclklost_i;
    wire            gt0_qpllreset_i;

    //____________________________COMMON PORTS________________________________
    //-------------------- Common Block  - Ref Clock Ports ---------------------
    wire            gt1_gtrefclk1_common_i;
    //----------------------- Common Block - QPLL Ports ------------------------
    wire            gt1_qplllock_i;
    wire            gt1_qpllrefclklost_i;
    wire            gt1_qpllreset_i;


    //----------------------------- Global Signals -----------------------------

    wire            drpclk_in_i;
//    wire            DRPCLK_IN;
    wire            gt0_tx_system_reset_c;
    wire            gt0_rx_system_reset_c;
    wire            gt1_tx_system_reset_c;
    wire            gt1_rx_system_reset_c;
    wire            gt2_tx_system_reset_c;
    wire            gt2_rx_system_reset_c;
    wire            gt3_tx_system_reset_c;
    wire            gt3_rx_system_reset_c;
    wire            gt4_tx_system_reset_c;
    wire            gt4_rx_system_reset_c;
    wire            gt5_tx_system_reset_c;
    wire            gt5_rx_system_reset_c;
    wire            gt6_tx_system_reset_c;
    wire            gt6_rx_system_reset_c;
    wire            tied_to_ground_i;
    wire    [63:0]  tied_to_ground_vec_i;
    wire            tied_to_vcc_i;
    wire    [7:0]   tied_to_vcc_vec_i;
    wire            GTTXRESET_IN;
    wire            GTRXRESET_IN;
    wire            CPLLRESET_IN;
    wire            QPLLRESET_IN;

     //--------------------------- User Clocks ---------------------------------
     wire            gt0_txusrclk_i; 
//     wire            gt0_txusrclk2_i; 
     wire            gt0_rxusrclk_i; 
//     wire            gt0_rxusrclk2_i; 
     wire            gt1_txusrclk_i; 
//     wire            gt1_txusrclk2_i; 
     wire            gt1_rxusrclk_i; 
//     wire            gt1_rxusrclk2_i; 
     wire            gt2_txusrclk_i; 
//     wire            gt2_txusrclk2_i; 
     wire            gt2_rxusrclk_i; 
//     wire            gt2_rxusrclk2_i; 
     wire            gt3_txusrclk_i; 
//     wire            gt3_txusrclk2_i; 
     wire            gt3_rxusrclk_i; 
//     wire            gt3_rxusrclk2_i; 
     wire            gt4_txusrclk_i; 
//     wire            gt4_txusrclk2_i; 
     wire            gt4_rxusrclk_i; 
//     wire            gt4_rxusrclk2_i; 
     wire            gt5_txusrclk_i; 
//     wire            gt5_txusrclk2_i; 
     wire            gt5_rxusrclk_i; 
//     wire            gt5_rxusrclk2_i; 
     wire            gt6_txusrclk_i; 
//     wire            gt6_txusrclk2_i; 
     wire            gt6_rxusrclk_i; 
//     wire            gt6_rxusrclk2_i; 
 
    //--------------------------- Reference Clocks ----------------------------
    
    wire            q0_clk1_refclk_i;


    //--------------------- Frame check/gen Module Signals --------------------
    wire            gt0_matchn_i;
    
    wire    [3:0]   gt0_txcharisk_float_i;
   
    wire    [15:0]  gt0_txdata_float16_i;
    wire    [31:0]  gt0_txdata_float_i;
    
    
    wire            gt0_block_sync_i;
    wire            gt0_track_data_i;
    wire    [7:0]   gt0_error_count_i;
    wire            gt0_frame_check_reset_i;
    wire            gt0_inc_in_i;
    wire            gt0_inc_out_i;
    wire    [31:0]  gt0_unscrambled_data_i;

    wire            gt1_matchn_i;
    
    wire    [3:0]   gt1_txcharisk_float_i;
   
    wire    [15:0]  gt1_txdata_float16_i;
    wire    [31:0]  gt1_txdata_float_i;
    
    
    wire            gt1_block_sync_i;
    wire            gt1_track_data_i;
    wire    [7:0]   gt1_error_count_i;
    wire            gt1_frame_check_reset_i;
    wire            gt1_inc_in_i;
    wire            gt1_inc_out_i;
    wire    [31:0]  gt1_unscrambled_data_i;

    wire            gt2_matchn_i;
    
    wire    [3:0]   gt2_txcharisk_float_i;
   
    wire    [15:0]  gt2_txdata_float16_i;
    wire    [31:0]  gt2_txdata_float_i;
    
    
    wire            gt2_block_sync_i;
    wire            gt2_track_data_i;
    wire    [7:0]   gt2_error_count_i;
    wire            gt2_frame_check_reset_i;
    wire            gt2_inc_in_i;
    wire            gt2_inc_out_i;
    wire    [31:0]  gt2_unscrambled_data_i;

    wire            gt3_matchn_i;
    
    wire    [3:0]   gt3_txcharisk_float_i;
   
    wire    [15:0]  gt3_txdata_float16_i;
    wire    [31:0]  gt3_txdata_float_i;
    
    
    wire            gt3_block_sync_i;
    wire            gt3_track_data_i;
    wire    [7:0]   gt3_error_count_i;
    wire            gt3_frame_check_reset_i;
    wire            gt3_inc_in_i;
    wire            gt3_inc_out_i;
    wire    [31:0]  gt3_unscrambled_data_i;

    wire            gt4_matchn_i;
    
    wire    [3:0]   gt4_txcharisk_float_i;
   
    wire    [15:0]  gt4_txdata_float16_i;
    wire    [31:0]  gt4_txdata_float_i;
    
    
    wire            gt4_block_sync_i;
    wire            gt4_track_data_i;
    wire    [7:0]   gt4_error_count_i;
    wire            gt4_frame_check_reset_i;
    wire            gt4_inc_in_i;
    wire            gt4_inc_out_i;
    wire    [31:0]  gt4_unscrambled_data_i;

    wire            gt5_matchn_i;
    
    wire    [3:0]   gt5_txcharisk_float_i;
   
    wire    [15:0]  gt5_txdata_float16_i;
    wire    [31:0]  gt5_txdata_float_i;
    
    
    wire            gt5_block_sync_i;
    wire            gt5_track_data_i;
    wire    [7:0]   gt5_error_count_i;
    wire            gt5_frame_check_reset_i;
    wire            gt5_inc_in_i;
    wire            gt5_inc_out_i;
    wire    [31:0]  gt5_unscrambled_data_i;

    wire            gt6_matchn_i;
    
    wire    [3:0]   gt6_txcharisk_float_i;
   
    wire    [15:0]  gt6_txdata_float16_i;
    wire    [31:0]  gt6_txdata_float_i;
    
    
    wire            gt6_block_sync_i;
    wire            gt6_track_data_i;
    wire    [7:0]   gt6_error_count_i;
    wire            gt6_frame_check_reset_i;
    wire            gt6_inc_in_i;
    wire            gt6_inc_out_i;
    wire    [31:0]  gt6_unscrambled_data_i;

    wire            reset_on_data_error_i;
    wire            track_data_out_i;
  

    //--------------------- Chipscope Signals ---------------------------------
    (*mark_debug = "TRUE" *)wire   rxresetdone_vio_i;
    wire    [35:0]  tx_data_vio_control_i;
    wire    [35:0]  rx_data_vio_control_i;
    wire    [35:0]  shared_vio_control_i;
    wire    [35:0]  ila_control_i;
    wire    [35:0]  channel_drp_vio_control_i;
    wire    [35:0]  common_drp_vio_control_i;
    wire    [31:0]  tx_data_vio_async_in_i;
    wire    [31:0]  tx_data_vio_sync_in_i;
    wire    [31:0]  tx_data_vio_async_out_i;
    wire    [31:0]  tx_data_vio_sync_out_i;
    wire    [31:0]  rx_data_vio_async_in_i;
    wire    [31:0]  rx_data_vio_sync_in_i;
    wire    [31:0]  rx_data_vio_async_out_i;
    wire    [31:0]  rx_data_vio_sync_out_i;
    wire    [31:0]  shared_vio_in_i;
    wire    [31:0]  shared_vio_out_i;
    wire    [163:0] ila_in_i;
    wire    [31:0]  channel_drp_vio_async_in_i;
    wire    [31:0]  channel_drp_vio_sync_in_i;
    wire    [31:0]  channel_drp_vio_async_out_i;
    wire    [31:0]  channel_drp_vio_sync_out_i;
    wire    [31:0]  common_drp_vio_async_in_i;
    wire    [31:0]  common_drp_vio_sync_in_i;
    wire    [31:0]  common_drp_vio_async_out_i;
    wire    [31:0]  common_drp_vio_sync_out_i;

    wire    [31:0]  gt0_tx_data_vio_async_in_i;
    wire    [31:0]  gt0_tx_data_vio_sync_in_i;
    wire    [31:0]  gt0_tx_data_vio_async_out_i;
    wire    [31:0]  gt0_tx_data_vio_sync_out_i;
    wire    [31:0]  gt0_rx_data_vio_async_in_i;
    wire    [31:0]  gt0_rx_data_vio_sync_in_i;
    wire    [31:0]  gt0_rx_data_vio_async_out_i;
    wire    [31:0]  gt0_rx_data_vio_sync_out_i;
    wire    [163:0] gt0_ila_in_i;
    wire    [31:0]  gt0_channel_drp_vio_async_in_i;
    wire    [31:0]  gt0_channel_drp_vio_sync_in_i;
    wire    [31:0]  gt0_channel_drp_vio_async_out_i;
    wire    [31:0]  gt0_channel_drp_vio_sync_out_i;
    wire    [31:0]  gt0_common_drp_vio_async_in_i;
    wire    [31:0]  gt0_common_drp_vio_sync_in_i;
    wire    [31:0]  gt0_common_drp_vio_async_out_i;
    wire    [31:0]  gt0_common_drp_vio_sync_out_i;

    wire    [31:0]  gt1_tx_data_vio_async_in_i;
    wire    [31:0]  gt1_tx_data_vio_sync_in_i;
    wire    [31:0]  gt1_tx_data_vio_async_out_i;
    wire    [31:0]  gt1_tx_data_vio_sync_out_i;
    wire    [31:0]  gt1_rx_data_vio_async_in_i;
    wire    [31:0]  gt1_rx_data_vio_sync_in_i;
    wire    [31:0]  gt1_rx_data_vio_async_out_i;
    wire    [31:0]  gt1_rx_data_vio_sync_out_i;
    wire    [163:0] gt1_ila_in_i;
    wire    [31:0]  gt1_channel_drp_vio_async_in_i;
    wire    [31:0]  gt1_channel_drp_vio_sync_in_i;
    wire    [31:0]  gt1_channel_drp_vio_async_out_i;
    wire    [31:0]  gt1_channel_drp_vio_sync_out_i;
    wire    [31:0]  gt1_common_drp_vio_async_in_i;
    wire    [31:0]  gt1_common_drp_vio_sync_in_i;
    wire    [31:0]  gt1_common_drp_vio_async_out_i;
    wire    [31:0]  gt1_common_drp_vio_sync_out_i;

    wire    [31:0]  gt2_tx_data_vio_async_in_i;
    wire    [31:0]  gt2_tx_data_vio_sync_in_i;
    wire    [31:0]  gt2_tx_data_vio_async_out_i;
    wire    [31:0]  gt2_tx_data_vio_sync_out_i;
    wire    [31:0]  gt2_rx_data_vio_async_in_i;
    wire    [31:0]  gt2_rx_data_vio_sync_in_i;
    wire    [31:0]  gt2_rx_data_vio_async_out_i;
    wire    [31:0]  gt2_rx_data_vio_sync_out_i;
    wire    [163:0] gt2_ila_in_i;
    wire    [31:0]  gt2_channel_drp_vio_async_in_i;
    wire    [31:0]  gt2_channel_drp_vio_sync_in_i;
    wire    [31:0]  gt2_channel_drp_vio_async_out_i;
    wire    [31:0]  gt2_channel_drp_vio_sync_out_i;
    wire    [31:0]  gt2_common_drp_vio_async_in_i;
    wire    [31:0]  gt2_common_drp_vio_sync_in_i;
    wire    [31:0]  gt2_common_drp_vio_async_out_i;
    wire    [31:0]  gt2_common_drp_vio_sync_out_i;

    wire    [31:0]  gt3_tx_data_vio_async_in_i;
    wire    [31:0]  gt3_tx_data_vio_sync_in_i;
    wire    [31:0]  gt3_tx_data_vio_async_out_i;
    wire    [31:0]  gt3_tx_data_vio_sync_out_i;
    wire    [31:0]  gt3_rx_data_vio_async_in_i;
    wire    [31:0]  gt3_rx_data_vio_sync_in_i;
    wire    [31:0]  gt3_rx_data_vio_async_out_i;
    wire    [31:0]  gt3_rx_data_vio_sync_out_i;
    wire    [163:0] gt3_ila_in_i;
    wire    [31:0]  gt3_channel_drp_vio_async_in_i;
    wire    [31:0]  gt3_channel_drp_vio_sync_in_i;
    wire    [31:0]  gt3_channel_drp_vio_async_out_i;
    wire    [31:0]  gt3_channel_drp_vio_sync_out_i;
    wire    [31:0]  gt3_common_drp_vio_async_in_i;
    wire    [31:0]  gt3_common_drp_vio_sync_in_i;
    wire    [31:0]  gt3_common_drp_vio_async_out_i;
    wire    [31:0]  gt3_common_drp_vio_sync_out_i;

    wire    [31:0]  gt4_tx_data_vio_async_in_i;
    wire    [31:0]  gt4_tx_data_vio_sync_in_i;
    wire    [31:0]  gt4_tx_data_vio_async_out_i;
    wire    [31:0]  gt4_tx_data_vio_sync_out_i;
    wire    [31:0]  gt4_rx_data_vio_async_in_i;
    wire    [31:0]  gt4_rx_data_vio_sync_in_i;
    wire    [31:0]  gt4_rx_data_vio_async_out_i;
    wire    [31:0]  gt4_rx_data_vio_sync_out_i;
    wire    [163:0] gt4_ila_in_i;
    wire    [31:0]  gt4_channel_drp_vio_async_in_i;
    wire    [31:0]  gt4_channel_drp_vio_sync_in_i;
    wire    [31:0]  gt4_channel_drp_vio_async_out_i;
    wire    [31:0]  gt4_channel_drp_vio_sync_out_i;
    wire    [31:0]  gt4_common_drp_vio_async_in_i;
    wire    [31:0]  gt4_common_drp_vio_sync_in_i;
    wire    [31:0]  gt4_common_drp_vio_async_out_i;
    wire    [31:0]  gt4_common_drp_vio_sync_out_i;

    wire    [31:0]  gt5_tx_data_vio_async_in_i;
    wire    [31:0]  gt5_tx_data_vio_sync_in_i;
    wire    [31:0]  gt5_tx_data_vio_async_out_i;
    wire    [31:0]  gt5_tx_data_vio_sync_out_i;
    wire    [31:0]  gt5_rx_data_vio_async_in_i;
    wire    [31:0]  gt5_rx_data_vio_sync_in_i;
    wire    [31:0]  gt5_rx_data_vio_async_out_i;
    wire    [31:0]  gt5_rx_data_vio_sync_out_i;
    wire    [163:0] gt5_ila_in_i;
    wire    [31:0]  gt5_channel_drp_vio_async_in_i;
    wire    [31:0]  gt5_channel_drp_vio_sync_in_i;
    wire    [31:0]  gt5_channel_drp_vio_async_out_i;
    wire    [31:0]  gt5_channel_drp_vio_sync_out_i;
    wire    [31:0]  gt5_common_drp_vio_async_in_i;
    wire    [31:0]  gt5_common_drp_vio_sync_in_i;
    wire    [31:0]  gt5_common_drp_vio_async_out_i;
    wire    [31:0]  gt5_common_drp_vio_sync_out_i;

    wire    [31:0]  gt6_tx_data_vio_async_in_i;
    wire    [31:0]  gt6_tx_data_vio_sync_in_i;
    wire    [31:0]  gt6_tx_data_vio_async_out_i;
    wire    [31:0]  gt6_tx_data_vio_sync_out_i;
    wire    [31:0]  gt6_rx_data_vio_async_in_i;
    wire    [31:0]  gt6_rx_data_vio_sync_in_i;
    wire    [31:0]  gt6_rx_data_vio_async_out_i;
    wire    [31:0]  gt6_rx_data_vio_sync_out_i;
    wire    [163:0] gt6_ila_in_i;
    wire    [31:0]  gt6_channel_drp_vio_async_in_i;
    wire    [31:0]  gt6_channel_drp_vio_sync_in_i;
    wire    [31:0]  gt6_channel_drp_vio_async_out_i;
    wire    [31:0]  gt6_channel_drp_vio_sync_out_i;
    wire    [31:0]  gt6_common_drp_vio_async_in_i;
    wire    [31:0]  gt6_common_drp_vio_sync_in_i;
    wire    [31:0]  gt6_common_drp_vio_async_out_i;
    wire    [31:0]  gt6_common_drp_vio_sync_out_i;


    wire            gttxreset_i;
    wire            gtrxreset_i;
    wire    [2:0]   mux_sel_i;

    wire            user_tx_reset_i;
    wire            user_rx_reset_i;
    wire            tx_vio_clk_i;
    wire            tx_vio_clk_mux_out_i;    
    wire            rx_vio_ila_clk_i;
    wire            rx_vio_ila_clk_mux_out_i;

    wire            cpllreset_i;
    


  wire [(80 -32) -1:0] zero_vector_rx_80 ;
  wire [(8 -4) -1:0] zero_vector_rx_8 ;
  wire [79:0] gt0_rxdata_ila ;
  wire [1:0]  gt0_rxdatavalid_ila; 
  wire [7:0]  gt0_rxcharisk_ila ;
  wire gt0_txmmcm_lock_ila ;
  wire gt0_rxmmcm_lock_ila ;
  wire gt0_rxresetdone_ila ;
  wire gt0_txresetdone_ila ;
  wire [79:0] gt1_rxdata_ila ;
  wire [1:0]  gt1_rxdatavalid_ila; 
  wire [7:0]  gt1_rxcharisk_ila ;
  wire gt1_txmmcm_lock_ila ;
  wire gt1_rxmmcm_lock_ila ;
  wire gt1_rxresetdone_ila ;
  wire gt1_txresetdone_ila ;
  wire [79:0] gt2_rxdata_ila ;
  wire [1:0]  gt2_rxdatavalid_ila; 
  wire [7:0]  gt2_rxcharisk_ila ;
  wire gt2_txmmcm_lock_ila ;
  wire gt2_rxmmcm_lock_ila ;
  wire gt2_rxresetdone_ila ;
  wire gt2_txresetdone_ila ;
  wire [79:0] gt3_rxdata_ila ;
  wire [1:0]  gt3_rxdatavalid_ila; 
  wire [7:0]  gt3_rxcharisk_ila ;
  wire gt3_txmmcm_lock_ila ;
  wire gt3_rxmmcm_lock_ila ;
  wire gt3_rxresetdone_ila ;
  wire gt3_txresetdone_ila ;
  wire [79:0] gt4_rxdata_ila ;
  wire [1:0]  gt4_rxdatavalid_ila; 
  wire [7:0]  gt4_rxcharisk_ila ;
  wire gt4_txmmcm_lock_ila ;
  wire gt4_rxmmcm_lock_ila ;
  wire gt4_rxresetdone_ila ;
  wire gt4_txresetdone_ila ;
  wire [79:0] gt5_rxdata_ila ;
  wire [1:0]  gt5_rxdatavalid_ila; 
  wire [7:0]  gt5_rxcharisk_ila ;
  wire gt5_txmmcm_lock_ila ;
  wire gt5_rxmmcm_lock_ila ;
  wire gt5_rxresetdone_ila ;
  wire gt5_txresetdone_ila ;
  wire [79:0] gt6_rxdata_ila ;
  wire [1:0]  gt6_rxdatavalid_ila; 
  wire [7:0]  gt6_rxcharisk_ila ;
  wire gt6_txmmcm_lock_ila ;
  wire gt6_rxmmcm_lock_ila ;
  wire gt6_rxresetdone_ila ;
  wire gt6_txresetdone_ila ;

//**************************** Main Body of Code *******************************

    //  Static signal Assigments    
    assign tied_to_ground_i             = 1'b0;
    assign tied_to_ground_vec_i         = 64'h0000000000000000;
    assign tied_to_vcc_i                = 1'b1;
    assign tied_to_vcc_vec_i            = 8'hff;

    assign zero_vector_rx_80 = 0;
    assign zero_vector_rx_8 = 0;

    
assign  q0_clk1_refclk_i                     =  1'b0;

    //***********************************************************************//
    //                                                                       //
    //--------------------------- The GT Wrapper ----------------------------//
    //                                                                       //
    //***********************************************************************//
    
    // Use the instantiation template in the example directory to add the GT wrapper to your design.
    // In this example, the wrapper is wired up for basic operation with a frame generator and frame 
    // checker. The GTs will reset, then attempt to align and transmit data. If channel bonding is 
    // enabled, bonding should occur after alignment.
    // While connecting the GT TX/RX Reset ports below, please add a delay of
    // minimum 500ns as mentioned in AR 43482.

    
    gtwizard_0_support #
    (
        .EXAMPLE_SIM_GTRESET_SPEEDUP    (EXAMPLE_SIM_GTRESET_SPEEDUP),
        .STABLE_CLOCK_PERIOD            (STABLE_CLOCK_PERIOD)
    )
    gtwizard_0_support_i
    (
        .soft_reset_tx_in               (soft_reset_i),
        .soft_reset_rx_in               (soft_reset_i),
        .dont_reset_on_data_error_in    (tied_to_ground_i),
    .q0_clk1_gtrefclk_pad_n_in(Q0_CLK1_GTREFCLK_PAD_N_IN),
    .q0_clk1_gtrefclk_pad_p_in(Q0_CLK1_GTREFCLK_PAD_P_IN),
        .gt0_tx_fsm_reset_done_out      (gt0_txfsmresetdone_i),
        .gt0_rx_fsm_reset_done_out      (gt0_rxfsmresetdone_i),
        .gt0_data_valid_in              (1'b1),//(gt0_track_data_i),
        .gt1_tx_fsm_reset_done_out      (gt1_txfsmresetdone_i),
        .gt1_rx_fsm_reset_done_out      (gt1_rxfsmresetdone_i),
        .gt1_data_valid_in              (1'b1),//(gt1_track_data_i),
        .gt2_tx_fsm_reset_done_out      (gt2_txfsmresetdone_i),
        .gt2_rx_fsm_reset_done_out      (gt2_rxfsmresetdone_i),
        .gt2_data_valid_in              (1'b1),//(gt2_track_data_i),
        .gt3_tx_fsm_reset_done_out      (gt3_txfsmresetdone_i),
        .gt3_rx_fsm_reset_done_out      (gt3_rxfsmresetdone_i),
        .gt3_data_valid_in              (1'b1),//(gt3_track_data_i),
        .gt4_tx_fsm_reset_done_out      (gt4_txfsmresetdone_i),
        .gt4_rx_fsm_reset_done_out      (gt4_rxfsmresetdone_i),
        .gt4_data_valid_in              (1'b1),//(gt4_track_data_i),
        .gt5_tx_fsm_reset_done_out      (gt5_txfsmresetdone_i),
        .gt5_rx_fsm_reset_done_out      (gt5_rxfsmresetdone_i),
        .gt5_data_valid_in              (1'b1),//(gt5_track_data_i),
        .gt6_tx_fsm_reset_done_out      (gt6_txfsmresetdone_i),
        .gt6_rx_fsm_reset_done_out      (gt6_rxfsmresetdone_i),
        .gt6_data_valid_in              (1'b1),//(gt6_track_data_i),
 
    .gt0_txusrclk_out(gt0_txusrclk_i),
    .gt0_txusrclk2_out(gt0_txusrclk2_i),
    .gt0_rxusrclk_out(gt0_rxusrclk_i),
    .gt0_rxusrclk2_out(gt0_rxusrclk2_i),
 
    .gt1_txusrclk_out(gt1_txusrclk_i),
    .gt1_txusrclk2_out(gt1_txusrclk2_i),
    .gt1_rxusrclk_out(gt1_rxusrclk_i),
    .gt1_rxusrclk2_out(gt1_rxusrclk2_i),
 
    .gt2_txusrclk_out(gt2_txusrclk_i),
    .gt2_txusrclk2_out(gt2_txusrclk2_i),
    .gt2_rxusrclk_out(gt2_rxusrclk_i),
    .gt2_rxusrclk2_out(gt2_rxusrclk2_i),
 
    .gt3_txusrclk_out(gt3_txusrclk_i),
    .gt3_txusrclk2_out(gt3_txusrclk2_i),
    .gt3_rxusrclk_out(gt3_rxusrclk_i),
    .gt3_rxusrclk2_out(gt3_rxusrclk2_i),
 
    .gt4_txusrclk_out(gt4_txusrclk_i),
    .gt4_txusrclk2_out(gt4_txusrclk2_i),
    .gt4_rxusrclk_out(gt4_rxusrclk_i),
    .gt4_rxusrclk2_out(gt4_rxusrclk2_i),
 
    .gt5_txusrclk_out(gt5_txusrclk_i),
    .gt5_txusrclk2_out(gt5_txusrclk2_i),
    .gt5_rxusrclk_out(gt5_rxusrclk_i),
    .gt5_rxusrclk2_out(gt5_rxusrclk2_i),
 
    .gt6_txusrclk_out(gt6_txusrclk_i),
    .gt6_txusrclk2_out(gt6_txusrclk2_i),
    .gt6_rxusrclk_out(gt6_rxusrclk_i),
    .gt6_rxusrclk2_out(gt6_rxusrclk2_i),


        //_____________________________________________________________________
        //_____________________________________________________________________
        //GT0  (X1Y0)

        //------------------------------- CPLL Ports -------------------------------
        .gt0_cpllfbclklost_out          (gt0_cpllfbclklost_i),
        .gt0_cplllock_out               (gt0_cplllock_i),
        .gt0_cpllreset_in               (tied_to_ground_i),
        //-------------------------- Channel - DRP Ports  --------------------------
        .gt0_drpaddr_in                 (gt0_drpaddr_i),
        .gt0_drpdi_in                   (gt0_drpdi_i),
        .gt0_drpdo_out                  (gt0_drpdo_i),
        .gt0_drpen_in                   (gt0_drpen_i),
        .gt0_drprdy_out                 (gt0_drprdy_i),
        .gt0_drpwe_in                   (gt0_drpwe_i),
        //------------------------- Digital Monitor Ports --------------------------
        .gt0_dmonitorout_out            (gt0_dmonitorout_i),
        //------------------- RX Initialization and Reset Ports --------------------
        .gt0_eyescanreset_in            (tied_to_ground_i),
        .gt0_rxuserrdy_in               (tied_to_vcc_i),
        //------------------------ RX Margin Analysis Ports ------------------------
        .gt0_eyescandataerror_out       (gt0_eyescandataerror_i),
        .gt0_eyescantrigger_in          (tied_to_ground_i),
        //---------------- Receive Ports - FPGA RX interface Ports -----------------
        .gt0_rxdata_out                 (gt0_rxdata_i),
        //------------------------- Receive Ports - RX AFE -------------------------
        .gt0_gtxrxp_in                  (RXP_IN[0]),
        //---------------------- Receive Ports - RX AFE Ports ----------------------
        .gt0_gtxrxn_in                  (RXN_IN[0]),
        //------------------- Receive Ports - RX Equalizer Ports -------------------
        .gt0_rxdfelpmreset_in           (tied_to_ground_i),
        .gt0_rxmonitorout_out           (gt0_rxmonitorout_i),
        .gt0_rxmonitorsel_in            (2'b00),
        //------------- Receive Ports - RX Fabric Output Control Ports -------------
        .gt0_rxoutclkfabric_out         (gt0_rxoutclkfabric_i),
        //----------- Receive Ports - RX Initialization and Reset Ports ------------
        .gt0_gtrxreset_in               (tied_to_ground_i),
        .gt0_rxpmareset_in              (gt0_rxpmareset_i),
        //------------ Receive Ports -RX Initialization and Reset Ports ------------
        .gt0_rxresetdone_out            (gt0_rxresetdone_i),
        //------------------- TX Initialization and Reset Ports --------------------
        .gt0_gttxreset_in               (tied_to_ground_i),
        .gt0_txuserrdy_in               (tied_to_vcc_i),
        //---------------- Transmit Ports - TX Data Path interface -----------------
        .gt0_txdata_in                  (gt0_txdata_i),
        //-------------- Transmit Ports - TX Driver and OOB signaling --------------
        .gt0_gtxtxn_out                 (TXN_OUT[0]),
        .gt0_gtxtxp_out                 (TXP_OUT[0]),
        //--------- Transmit Ports - TX Fabric Clock Output Control Ports ----------
        .gt0_txoutclkfabric_out         (gt0_txoutclkfabric_i),
        .gt0_txoutclkpcs_out            (gt0_txoutclkpcs_i),
        //----------- Transmit Ports - TX Initialization and Reset Ports -----------
        .gt0_txresetdone_out            (gt0_txresetdone_i),



        //_____________________________________________________________________
        //_____________________________________________________________________
        //GT1  (X1Y1)

        //------------------------------- CPLL Ports -------------------------------
        .gt1_cpllfbclklost_out          (gt1_cpllfbclklost_i),
        .gt1_cplllock_out               (gt1_cplllock_i),
        .gt1_cpllreset_in               (tied_to_ground_i),
        //-------------------------- Channel - DRP Ports  --------------------------
        .gt1_drpaddr_in                 (gt1_drpaddr_i),
        .gt1_drpdi_in                   (gt1_drpdi_i),
        .gt1_drpdo_out                  (gt1_drpdo_i),
        .gt1_drpen_in                   (gt1_drpen_i),
        .gt1_drprdy_out                 (gt1_drprdy_i),
        .gt1_drpwe_in                   (gt1_drpwe_i),
        //------------------------- Digital Monitor Ports --------------------------
        .gt1_dmonitorout_out            (gt1_dmonitorout_i),
        //------------------- RX Initialization and Reset Ports --------------------
        .gt1_eyescanreset_in            (tied_to_ground_i),
        .gt1_rxuserrdy_in               (tied_to_vcc_i),
        //------------------------ RX Margin Analysis Ports ------------------------
        .gt1_eyescandataerror_out       (gt1_eyescandataerror_i),
        .gt1_eyescantrigger_in          (tied_to_ground_i),
        //---------------- Receive Ports - FPGA RX interface Ports -----------------
        .gt1_rxdata_out                 (gt1_rxdata_i),
        //------------------------- Receive Ports - RX AFE -------------------------
        .gt1_gtxrxp_in                  (RXP_IN[1]),
        //---------------------- Receive Ports - RX AFE Ports ----------------------
        .gt1_gtxrxn_in                  (RXN_IN[1]),
        //------------------- Receive Ports - RX Equalizer Ports -------------------
        .gt1_rxdfelpmreset_in           (tied_to_ground_i),
        .gt1_rxmonitorout_out           (gt1_rxmonitorout_i),
        .gt1_rxmonitorsel_in            (2'b00),
        //------------- Receive Ports - RX Fabric Output Control Ports -------------
        .gt1_rxoutclkfabric_out         (gt1_rxoutclkfabric_i),
        //----------- Receive Ports - RX Initialization and Reset Ports ------------
        .gt1_gtrxreset_in               (tied_to_ground_i),
        .gt1_rxpmareset_in              (gt1_rxpmareset_i),
        //------------ Receive Ports -RX Initialization and Reset Ports ------------
        .gt1_rxresetdone_out            (gt1_rxresetdone_i),
        //------------------- TX Initialization and Reset Ports --------------------
        .gt1_gttxreset_in               (tied_to_ground_i),
        .gt1_txuserrdy_in               (tied_to_vcc_i),
        //---------------- Transmit Ports - TX Data Path interface -----------------
        .gt1_txdata_in                  (gt1_txdata_i),
        //-------------- Transmit Ports - TX Driver and OOB signaling --------------
        .gt1_gtxtxn_out                 (TXN_OUT[1]),
        .gt1_gtxtxp_out                 (TXP_OUT[1]),
        //--------- Transmit Ports - TX Fabric Clock Output Control Ports ----------
        .gt1_txoutclkfabric_out         (gt1_txoutclkfabric_i),
        .gt1_txoutclkpcs_out            (gt1_txoutclkpcs_i),
        //----------- Transmit Ports - TX Initialization and Reset Ports -----------
        .gt1_txresetdone_out            (gt1_txresetdone_i),



        //_____________________________________________________________________
        //_____________________________________________________________________
        //GT2  (X1Y2)

        //------------------------------- CPLL Ports -------------------------------
        .gt2_cpllfbclklost_out          (gt2_cpllfbclklost_i),
        .gt2_cplllock_out               (gt2_cplllock_i),
        .gt2_cpllreset_in               (tied_to_ground_i),
        //-------------------------- Channel - DRP Ports  --------------------------
        .gt2_drpaddr_in                 (gt2_drpaddr_i),
        .gt2_drpdi_in                   (gt2_drpdi_i),
        .gt2_drpdo_out                  (gt2_drpdo_i),
        .gt2_drpen_in                   (gt2_drpen_i),
        .gt2_drprdy_out                 (gt2_drprdy_i),
        .gt2_drpwe_in                   (gt2_drpwe_i),
        //------------------------- Digital Monitor Ports --------------------------
        .gt2_dmonitorout_out            (gt2_dmonitorout_i),
        //------------------- RX Initialization and Reset Ports --------------------
        .gt2_eyescanreset_in            (tied_to_ground_i),
        .gt2_rxuserrdy_in               (tied_to_vcc_i),
        //------------------------ RX Margin Analysis Ports ------------------------
        .gt2_eyescandataerror_out       (gt2_eyescandataerror_i),
        .gt2_eyescantrigger_in          (tied_to_ground_i),
        //---------------- Receive Ports - FPGA RX interface Ports -----------------
        .gt2_rxdata_out                 (gt2_rxdata_i),
        //------------------------- Receive Ports - RX AFE -------------------------
        .gt2_gtxrxp_in                  (RXP_IN[2]),
        //---------------------- Receive Ports - RX AFE Ports ----------------------
        .gt2_gtxrxn_in                  (RXN_IN[2]),
        //------------------- Receive Ports - RX Equalizer Ports -------------------
        .gt2_rxdfelpmreset_in           (tied_to_ground_i),
        .gt2_rxmonitorout_out           (gt2_rxmonitorout_i),
        .gt2_rxmonitorsel_in            (2'b00),
        //------------- Receive Ports - RX Fabric Output Control Ports -------------
        .gt2_rxoutclkfabric_out         (gt2_rxoutclkfabric_i),
        //----------- Receive Ports - RX Initialization and Reset Ports ------------
        .gt2_gtrxreset_in               (tied_to_ground_i),
        .gt2_rxpmareset_in              (gt2_rxpmareset_i),
        //------------ Receive Ports -RX Initialization and Reset Ports ------------
        .gt2_rxresetdone_out            (gt2_rxresetdone_i),
        //------------------- TX Initialization and Reset Ports --------------------
        .gt2_gttxreset_in               (tied_to_ground_i),
        .gt2_txuserrdy_in               (tied_to_vcc_i),
        //---------------- Transmit Ports - TX Data Path interface -----------------
        .gt2_txdata_in                  (gt2_txdata_i),
        //-------------- Transmit Ports - TX Driver and OOB signaling --------------
        .gt2_gtxtxn_out                 (TXN_OUT[2]),
        .gt2_gtxtxp_out                 (TXP_OUT[2]),
        //--------- Transmit Ports - TX Fabric Clock Output Control Ports ----------
        .gt2_txoutclkfabric_out         (gt2_txoutclkfabric_i),
        .gt2_txoutclkpcs_out            (gt2_txoutclkpcs_i),
        //----------- Transmit Ports - TX Initialization and Reset Ports -----------
        .gt2_txresetdone_out            (gt2_txresetdone_i),



        //_____________________________________________________________________
        //_____________________________________________________________________
        //GT3  (X1Y3)

        //------------------------------- CPLL Ports -------------------------------
        .gt3_cpllfbclklost_out          (gt3_cpllfbclklost_i),
        .gt3_cplllock_out               (gt3_cplllock_i),
        .gt3_cpllreset_in               (tied_to_ground_i),
        //-------------------------- Channel - DRP Ports  --------------------------
        .gt3_drpaddr_in                 (gt3_drpaddr_i),
        .gt3_drpdi_in                   (gt3_drpdi_i),
        .gt3_drpdo_out                  (gt3_drpdo_i),
        .gt3_drpen_in                   (gt3_drpen_i),
        .gt3_drprdy_out                 (gt3_drprdy_i),
        .gt3_drpwe_in                   (gt3_drpwe_i),
        //------------------------- Digital Monitor Ports --------------------------
        .gt3_dmonitorout_out            (gt3_dmonitorout_i),
        //------------------- RX Initialization and Reset Ports --------------------
        .gt3_eyescanreset_in            (tied_to_ground_i),
        .gt3_rxuserrdy_in               (tied_to_vcc_i),
        //------------------------ RX Margin Analysis Ports ------------------------
        .gt3_eyescandataerror_out       (gt3_eyescandataerror_i),
        .gt3_eyescantrigger_in          (tied_to_ground_i),
        //---------------- Receive Ports - FPGA RX interface Ports -----------------
        .gt3_rxdata_out                 (gt3_rxdata_i),
        //------------------------- Receive Ports - RX AFE -------------------------
        .gt3_gtxrxp_in                  (RXP_IN[3]),
        //---------------------- Receive Ports - RX AFE Ports ----------------------
        .gt3_gtxrxn_in                  (RXN_IN[3]),
        //------------------- Receive Ports - RX Equalizer Ports -------------------
        .gt3_rxdfelpmreset_in           (tied_to_ground_i),
        .gt3_rxmonitorout_out           (gt3_rxmonitorout_i),
        .gt3_rxmonitorsel_in            (2'b00),
        //------------- Receive Ports - RX Fabric Output Control Ports -------------
        .gt3_rxoutclkfabric_out         (gt3_rxoutclkfabric_i),
        //----------- Receive Ports - RX Initialization and Reset Ports ------------
        .gt3_gtrxreset_in               (tied_to_ground_i),
        .gt3_rxpmareset_in              (gt3_rxpmareset_i),
        //------------ Receive Ports -RX Initialization and Reset Ports ------------
        .gt3_rxresetdone_out            (gt3_rxresetdone_i),
        //------------------- TX Initialization and Reset Ports --------------------
        .gt3_gttxreset_in               (tied_to_ground_i),
        .gt3_txuserrdy_in               (tied_to_vcc_i),
        //---------------- Transmit Ports - TX Data Path interface -----------------
        .gt3_txdata_in                  (gt3_txdata_i),
        //-------------- Transmit Ports - TX Driver and OOB signaling --------------
        .gt3_gtxtxn_out                 (TXN_OUT[3]),
        .gt3_gtxtxp_out                 (TXP_OUT[3]),
        //--------- Transmit Ports - TX Fabric Clock Output Control Ports ----------
        .gt3_txoutclkfabric_out         (gt3_txoutclkfabric_i),
        .gt3_txoutclkpcs_out            (gt3_txoutclkpcs_i),
        //----------- Transmit Ports - TX Initialization and Reset Ports -----------
        .gt3_txresetdone_out            (gt3_txresetdone_i),



        //_____________________________________________________________________
        //_____________________________________________________________________
        //GT4  (X1Y4)

        //------------------------------- CPLL Ports -------------------------------
        .gt4_cpllfbclklost_out          (gt4_cpllfbclklost_i),
        .gt4_cplllock_out               (gt4_cplllock_i),
        .gt4_cpllreset_in               (tied_to_ground_i),
        //-------------------------- Channel - DRP Ports  --------------------------
        .gt4_drpaddr_in                 (gt4_drpaddr_i),
        .gt4_drpdi_in                   (gt4_drpdi_i),
        .gt4_drpdo_out                  (gt4_drpdo_i),
        .gt4_drpen_in                   (gt4_drpen_i),
        .gt4_drprdy_out                 (gt4_drprdy_i),
        .gt4_drpwe_in                   (gt4_drpwe_i),
        //------------------------- Digital Monitor Ports --------------------------
        .gt4_dmonitorout_out            (gt4_dmonitorout_i),
        //------------------- RX Initialization and Reset Ports --------------------
        .gt4_eyescanreset_in            (tied_to_ground_i),
        .gt4_rxuserrdy_in               (tied_to_vcc_i),
        //------------------------ RX Margin Analysis Ports ------------------------
        .gt4_eyescandataerror_out       (gt4_eyescandataerror_i),
        .gt4_eyescantrigger_in          (tied_to_ground_i),
        //---------------- Receive Ports - FPGA RX interface Ports -----------------
        .gt4_rxdata_out                 (gt4_rxdata_i),
        //------------------------- Receive Ports - RX AFE -------------------------
        .gt4_gtxrxp_in                  (RXP_IN[4]),
        //---------------------- Receive Ports - RX AFE Ports ----------------------
        .gt4_gtxrxn_in                  (RXN_IN[4]),
        //------------------- Receive Ports - RX Equalizer Ports -------------------
        .gt4_rxdfelpmreset_in           (tied_to_ground_i),
        .gt4_rxmonitorout_out           (gt4_rxmonitorout_i),
        .gt4_rxmonitorsel_in            (2'b00),
        //------------- Receive Ports - RX Fabric Output Control Ports -------------
        .gt4_rxoutclkfabric_out         (gt4_rxoutclkfabric_i),
        //----------- Receive Ports - RX Initialization and Reset Ports ------------
        .gt4_gtrxreset_in               (tied_to_ground_i),
        .gt4_rxpmareset_in              (gt4_rxpmareset_i),
        //------------ Receive Ports -RX Initialization and Reset Ports ------------
        .gt4_rxresetdone_out            (gt4_rxresetdone_i),
        //------------------- TX Initialization and Reset Ports --------------------
        .gt4_gttxreset_in               (tied_to_ground_i),
        .gt4_txuserrdy_in               (tied_to_vcc_i),
        //---------------- Transmit Ports - TX Data Path interface -----------------
        .gt4_txdata_in                  (gt4_txdata_i),
        //-------------- Transmit Ports - TX Driver and OOB signaling --------------
        .gt4_gtxtxn_out                 (TXN_OUT[4]),
        .gt4_gtxtxp_out                 (TXP_OUT[4]),
        //--------- Transmit Ports - TX Fabric Clock Output Control Ports ----------
        .gt4_txoutclkfabric_out         (gt4_txoutclkfabric_i),
        .gt4_txoutclkpcs_out            (gt4_txoutclkpcs_i),
        //----------- Transmit Ports - TX Initialization and Reset Ports -----------
        .gt4_txresetdone_out            (gt4_txresetdone_i),



        //_____________________________________________________________________
        //_____________________________________________________________________
        //GT5  (X1Y5)

        //------------------------------- CPLL Ports -------------------------------
        .gt5_cpllfbclklost_out          (gt5_cpllfbclklost_i),
        .gt5_cplllock_out               (gt5_cplllock_i),
        .gt5_cpllreset_in               (tied_to_ground_i),
        //-------------------------- Channel - DRP Ports  --------------------------
        .gt5_drpaddr_in                 (gt5_drpaddr_i),
        .gt5_drpdi_in                   (gt5_drpdi_i),
        .gt5_drpdo_out                  (gt5_drpdo_i),
        .gt5_drpen_in                   (gt5_drpen_i),
        .gt5_drprdy_out                 (gt5_drprdy_i),
        .gt5_drpwe_in                   (gt5_drpwe_i),
        //------------------------- Digital Monitor Ports --------------------------
        .gt5_dmonitorout_out            (gt5_dmonitorout_i),
        //------------------- RX Initialization and Reset Ports --------------------
        .gt5_eyescanreset_in            (tied_to_ground_i),
        .gt5_rxuserrdy_in               (tied_to_vcc_i),
        //------------------------ RX Margin Analysis Ports ------------------------
        .gt5_eyescandataerror_out       (gt5_eyescandataerror_i),
        .gt5_eyescantrigger_in          (tied_to_ground_i),
        //---------------- Receive Ports - FPGA RX interface Ports -----------------
        .gt5_rxdata_out                 (gt5_rxdata_i),
        //------------------------- Receive Ports - RX AFE -------------------------
        .gt5_gtxrxp_in                  (RXP_IN[5]),
        //---------------------- Receive Ports - RX AFE Ports ----------------------
        .gt5_gtxrxn_in                  (RXN_IN[5]),
        //------------------- Receive Ports - RX Equalizer Ports -------------------
        .gt5_rxdfelpmreset_in           (tied_to_ground_i),
        .gt5_rxmonitorout_out           (gt5_rxmonitorout_i),
        .gt5_rxmonitorsel_in            (2'b00),
        //------------- Receive Ports - RX Fabric Output Control Ports -------------
        .gt5_rxoutclkfabric_out         (gt5_rxoutclkfabric_i),
        //----------- Receive Ports - RX Initialization and Reset Ports ------------
        .gt5_gtrxreset_in               (tied_to_ground_i),
        .gt5_rxpmareset_in              (gt5_rxpmareset_i),
        //------------ Receive Ports -RX Initialization and Reset Ports ------------
        .gt5_rxresetdone_out            (gt5_rxresetdone_i),
        //------------------- TX Initialization and Reset Ports --------------------
        .gt5_gttxreset_in               (tied_to_ground_i),
        .gt5_txuserrdy_in               (tied_to_vcc_i),
        //---------------- Transmit Ports - TX Data Path interface -----------------
        .gt5_txdata_in                  (gt5_txdata_i),
        //-------------- Transmit Ports - TX Driver and OOB signaling --------------
        .gt5_gtxtxn_out                 (TXN_OUT[5]),
        .gt5_gtxtxp_out                 (TXP_OUT[5]),
        //--------- Transmit Ports - TX Fabric Clock Output Control Ports ----------
        .gt5_txoutclkfabric_out         (gt5_txoutclkfabric_i),
        .gt5_txoutclkpcs_out            (gt5_txoutclkpcs_i),
        //----------- Transmit Ports - TX Initialization and Reset Ports -----------
        .gt5_txresetdone_out            (gt5_txresetdone_i),



        //_____________________________________________________________________
        //_____________________________________________________________________
        //GT6  (X1Y6)

        //------------------------------- CPLL Ports -------------------------------
        .gt6_cpllfbclklost_out          (gt6_cpllfbclklost_i),
        .gt6_cplllock_out               (gt6_cplllock_i),
        .gt6_cpllreset_in               (tied_to_ground_i),
        //-------------------------- Channel - DRP Ports  --------------------------
        .gt6_drpaddr_in                 (gt6_drpaddr_i),
        .gt6_drpdi_in                   (gt6_drpdi_i),
        .gt6_drpdo_out                  (gt6_drpdo_i),
        .gt6_drpen_in                   (gt6_drpen_i),
        .gt6_drprdy_out                 (gt6_drprdy_i),
        .gt6_drpwe_in                   (gt6_drpwe_i),
        //------------------------- Digital Monitor Ports --------------------------
        .gt6_dmonitorout_out            (gt6_dmonitorout_i),
        //------------------- RX Initialization and Reset Ports --------------------
        .gt6_eyescanreset_in            (tied_to_ground_i),
        .gt6_rxuserrdy_in               (tied_to_vcc_i),
        //------------------------ RX Margin Analysis Ports ------------------------
        .gt6_eyescandataerror_out       (gt6_eyescandataerror_i),
        .gt6_eyescantrigger_in          (tied_to_ground_i),
        //---------------- Receive Ports - FPGA RX interface Ports -----------------
        .gt6_rxdata_out                 (gt6_rxdata_i),
        //------------------------- Receive Ports - RX AFE -------------------------
        .gt6_gtxrxp_in                  (RXP_IN[6]),
        //---------------------- Receive Ports - RX AFE Ports ----------------------
        .gt6_gtxrxn_in                  (RXN_IN[6]),
        //------------------- Receive Ports - RX Equalizer Ports -------------------
        .gt6_rxdfelpmreset_in           (tied_to_ground_i),
        .gt6_rxmonitorout_out           (gt6_rxmonitorout_i),
        .gt6_rxmonitorsel_in            (2'b00),
        //------------- Receive Ports - RX Fabric Output Control Ports -------------
        .gt6_rxoutclkfabric_out         (gt6_rxoutclkfabric_i),
        //----------- Receive Ports - RX Initialization and Reset Ports ------------
        .gt6_gtrxreset_in               (tied_to_ground_i),
        .gt6_rxpmareset_in              (gt6_rxpmareset_i),
        //------------ Receive Ports -RX Initialization and Reset Ports ------------
        .gt6_rxresetdone_out            (gt6_rxresetdone_i),
        //------------------- TX Initialization and Reset Ports --------------------
        .gt6_gttxreset_in               (tied_to_ground_i),
        .gt6_txuserrdy_in               (tied_to_vcc_i),
        //---------------- Transmit Ports - TX Data Path interface -----------------
        .gt6_txdata_in                  (gt6_txdata_i),
        //-------------- Transmit Ports - TX Driver and OOB signaling --------------
        .gt6_gtxtxn_out                 (TXN_OUT[6]),
        .gt6_gtxtxp_out                 (TXP_OUT[6]),
        //--------- Transmit Ports - TX Fabric Clock Output Control Ports ----------
        .gt6_txoutclkfabric_out         (gt6_txoutclkfabric_i),
        .gt6_txoutclkpcs_out            (gt6_txoutclkpcs_i),
        //----------- Transmit Ports - TX Initialization and Reset Ports -----------
        .gt6_txresetdone_out            (gt6_txresetdone_i),


    //____________________________COMMON PORTS________________________________
    .gt0_qplloutclk_out(),
    .gt0_qplloutrefclk_out(),
    .gt1_qplloutclk_out(),
    .gt1_qplloutrefclk_out(),
    .sysclk_in(drpclk_in_i)
    );

//    IBUFDS IBUFDS_DRP_CLK
//     (
//        .I  (DRP_CLK_IN_P),
//        .IB (DRP_CLK_IN_N),
//        .O  (DRPCLK_IN)
//     );

    BUFG DRP_CLK_BUFG
    (
        .I                              (DRPCLK_IN),
        .O                              (drpclk_in_i) 
    );

 
    //***********************************************************************//
    //                                                                       //
    //--------------------------- User Module Resets-------------------------//
    //                                                                       //
    //***********************************************************************//
    // All the User Modules i.e. FRAME_GEN, FRAME_CHECK and the sync modules
    // are held in reset till the RESETDONE goes high. 
    // The RESETDONE is registered a couple of times on *USRCLK2 and connected 
    // to the reset of the modules
    
always @(posedge gt0_rxusrclk2_i or negedge gt0_rxresetdone_i)

    begin
        if (!gt0_rxresetdone_i)
        begin
            gt0_rxresetdone_r    <=   `DLY 1'b0;
            gt0_rxresetdone_r2   <=   `DLY 1'b0;
            gt0_rxresetdone_r3   <=   `DLY 1'b0;
        end
        else
        begin
            gt0_rxresetdone_r    <=   `DLY gt0_rxresetdone_i;
            gt0_rxresetdone_r2   <=   `DLY gt0_rxresetdone_r;
            gt0_rxresetdone_r3   <=   `DLY gt0_rxresetdone_r2;
        end
    end

    
    
always @(posedge  gt0_txusrclk2_i or negedge gt0_txfsmresetdone_i)

    begin
        if (!gt0_txfsmresetdone_i)
        begin
            gt0_txfsmresetdone_r    <=   `DLY 1'b0;
            gt0_txfsmresetdone_r2   <=   `DLY 1'b0;
        end
        else
        begin
            gt0_txfsmresetdone_r    <=   `DLY gt0_txfsmresetdone_i;
            gt0_txfsmresetdone_r2   <=   `DLY gt0_txfsmresetdone_r;
        end
    end

always @(posedge gt1_rxusrclk2_i or negedge gt1_rxresetdone_i)

    begin
        if (!gt1_rxresetdone_i)
        begin
            gt1_rxresetdone_r    <=   `DLY 1'b0;
            gt1_rxresetdone_r2   <=   `DLY 1'b0;
            gt1_rxresetdone_r3   <=   `DLY 1'b0;
        end
        else
        begin
            gt1_rxresetdone_r    <=   `DLY gt1_rxresetdone_i;
            gt1_rxresetdone_r2   <=   `DLY gt1_rxresetdone_r;
            gt1_rxresetdone_r3   <=   `DLY gt1_rxresetdone_r2;
        end
    end

    
    
always @(posedge  gt1_txusrclk2_i or negedge gt1_txfsmresetdone_i)

    begin
        if (!gt1_txfsmresetdone_i)
        begin
            gt1_txfsmresetdone_r    <=   `DLY 1'b0;
            gt1_txfsmresetdone_r2   <=   `DLY 1'b0;
        end
        else
        begin
            gt1_txfsmresetdone_r    <=   `DLY gt1_txfsmresetdone_i;
            gt1_txfsmresetdone_r2   <=   `DLY gt1_txfsmresetdone_r;
        end
    end

always @(posedge gt2_rxusrclk2_i or negedge gt2_rxresetdone_i)

    begin
        if (!gt2_rxresetdone_i)
        begin
            gt2_rxresetdone_r    <=   `DLY 1'b0;
            gt2_rxresetdone_r2   <=   `DLY 1'b0;
            gt2_rxresetdone_r3   <=   `DLY 1'b0;
        end
        else
        begin
            gt2_rxresetdone_r    <=   `DLY gt2_rxresetdone_i;
            gt2_rxresetdone_r2   <=   `DLY gt2_rxresetdone_r;
            gt2_rxresetdone_r3   <=   `DLY gt2_rxresetdone_r2;
        end
    end

    
    
always @(posedge  gt2_txusrclk2_i or negedge gt2_txfsmresetdone_i)

    begin
        if (!gt2_txfsmresetdone_i)
        begin
            gt2_txfsmresetdone_r    <=   `DLY 1'b0;
            gt2_txfsmresetdone_r2   <=   `DLY 1'b0;
        end
        else
        begin
            gt2_txfsmresetdone_r    <=   `DLY gt2_txfsmresetdone_i;
            gt2_txfsmresetdone_r2   <=   `DLY gt2_txfsmresetdone_r;
        end
    end

always @(posedge gt3_rxusrclk2_i or negedge gt3_rxresetdone_i)

    begin
        if (!gt3_rxresetdone_i)
        begin
            gt3_rxresetdone_r    <=   `DLY 1'b0;
            gt3_rxresetdone_r2   <=   `DLY 1'b0;
            gt3_rxresetdone_r3   <=   `DLY 1'b0;
        end
        else
        begin
            gt3_rxresetdone_r    <=   `DLY gt3_rxresetdone_i;
            gt3_rxresetdone_r2   <=   `DLY gt3_rxresetdone_r;
            gt3_rxresetdone_r3   <=   `DLY gt3_rxresetdone_r2;
        end
    end

    
    
always @(posedge  gt3_txusrclk2_i or negedge gt3_txfsmresetdone_i)

    begin
        if (!gt3_txfsmresetdone_i)
        begin
            gt3_txfsmresetdone_r    <=   `DLY 1'b0;
            gt3_txfsmresetdone_r2   <=   `DLY 1'b0;
        end
        else
        begin
            gt3_txfsmresetdone_r    <=   `DLY gt3_txfsmresetdone_i;
            gt3_txfsmresetdone_r2   <=   `DLY gt3_txfsmresetdone_r;
        end
    end

always @(posedge gt4_rxusrclk2_i or negedge gt4_rxresetdone_i)

    begin
        if (!gt4_rxresetdone_i)
        begin
            gt4_rxresetdone_r    <=   `DLY 1'b0;
            gt4_rxresetdone_r2   <=   `DLY 1'b0;
            gt4_rxresetdone_r3   <=   `DLY 1'b0;
        end
        else
        begin
            gt4_rxresetdone_r    <=   `DLY gt4_rxresetdone_i;
            gt4_rxresetdone_r2   <=   `DLY gt4_rxresetdone_r;
            gt4_rxresetdone_r3   <=   `DLY gt4_rxresetdone_r2;
        end
    end

    
    
always @(posedge  gt4_txusrclk2_i or negedge gt4_txfsmresetdone_i)

    begin
        if (!gt4_txfsmresetdone_i)
        begin
            gt4_txfsmresetdone_r    <=   `DLY 1'b0;
            gt4_txfsmresetdone_r2   <=   `DLY 1'b0;
        end
        else
        begin
            gt4_txfsmresetdone_r    <=   `DLY gt4_txfsmresetdone_i;
            gt4_txfsmresetdone_r2   <=   `DLY gt4_txfsmresetdone_r;
        end
    end

always @(posedge gt5_rxusrclk2_i or negedge gt5_rxresetdone_i)

    begin
        if (!gt5_rxresetdone_i)
        begin
            gt5_rxresetdone_r    <=   `DLY 1'b0;
            gt5_rxresetdone_r2   <=   `DLY 1'b0;
            gt5_rxresetdone_r3   <=   `DLY 1'b0;
        end
        else
        begin
            gt5_rxresetdone_r    <=   `DLY gt5_rxresetdone_i;
            gt5_rxresetdone_r2   <=   `DLY gt5_rxresetdone_r;
            gt5_rxresetdone_r3   <=   `DLY gt5_rxresetdone_r2;
        end
    end

    
    
always @(posedge  gt5_txusrclk2_i or negedge gt5_txfsmresetdone_i)

    begin
        if (!gt5_txfsmresetdone_i)
        begin
            gt5_txfsmresetdone_r    <=   `DLY 1'b0;
            gt5_txfsmresetdone_r2   <=   `DLY 1'b0;
        end
        else
        begin
            gt5_txfsmresetdone_r    <=   `DLY gt5_txfsmresetdone_i;
            gt5_txfsmresetdone_r2   <=   `DLY gt5_txfsmresetdone_r;
        end
    end

always @(posedge gt6_rxusrclk2_i or negedge gt6_rxresetdone_i)

    begin
        if (!gt6_rxresetdone_i)
        begin
            gt6_rxresetdone_r    <=   `DLY 1'b0;
            gt6_rxresetdone_r2   <=   `DLY 1'b0;
            gt6_rxresetdone_r3   <=   `DLY 1'b0;
        end
        else
        begin
            gt6_rxresetdone_r    <=   `DLY gt6_rxresetdone_i;
            gt6_rxresetdone_r2   <=   `DLY gt6_rxresetdone_r;
            gt6_rxresetdone_r3   <=   `DLY gt6_rxresetdone_r2;
        end
    end

    
    
always @(posedge  gt6_txusrclk2_i or negedge gt6_txfsmresetdone_i)

    begin
        if (!gt6_txfsmresetdone_i)
        begin
            gt6_txfsmresetdone_r    <=   `DLY 1'b0;
            gt6_txfsmresetdone_r2   <=   `DLY 1'b0;
        end
        else
        begin
            gt6_txfsmresetdone_r    <=   `DLY gt6_txfsmresetdone_i;
            gt6_txfsmresetdone_r2   <=   `DLY gt6_txfsmresetdone_r;
        end
    end



    //***********************************************************************//
    //                                                                       //
    //------------------------  Frame Generators  ---------------------------//
    //                                                                       //
    //***********************************************************************//
    // The example design uses Block RAM based frame generators to provide test
    // data to the GTs for transmission. By default the frame generators are 
    // loaded with an incrementing data sequence that includes commas/alignment
    // characters for alignment. If your protocol uses channel bonding, the 
    // frame generator will also be preloaded with a channel bonding sequence.
    
    // You can modify the data transmitted by changing the INIT values of the frame
    // generator in this file. Pay careful attention to bit order and the spacing
    // of your control and alignment characters.


//    gtwizard_0_GT_FRAME_GEN #
//    (
//        .WORDS_IN_BRAM(EXAMPLE_WORDS_IN_BRAM)
//    )
//    gt0_frame_gen
//    (
//        // User Interface
//        .TX_DATA_OUT                    ({gt0_txdata_float_i,gt0_txdata_i,gt0_txdata_float16_i}),
//        .TXCTRL_OUT                     (),

//        // System Interface
//        .USER_CLK                        (gt0_txusrclk2_i),
//        .SYSTEM_RESET                   (gt0_tx_system_reset_c)
//    );

//    gtwizard_0_GT_FRAME_GEN #
//    (
//        .WORDS_IN_BRAM(EXAMPLE_WORDS_IN_BRAM)
//    )
//    gt1_frame_gen
//    (
//        // User Interface
//        .TX_DATA_OUT                    ({gt1_txdata_float_i,gt1_txdata_i,gt1_txdata_float16_i}),
//        .TXCTRL_OUT                     (),

//        // System Interface
//        .USER_CLK                        (gt1_txusrclk2_i),
//        .SYSTEM_RESET                   (gt1_tx_system_reset_c)
//    );

//    gtwizard_0_GT_FRAME_GEN #
//    (
//        .WORDS_IN_BRAM(EXAMPLE_WORDS_IN_BRAM)
//    )
//    gt2_frame_gen
//    (
//        // User Interface
//        .TX_DATA_OUT                    ({gt2_txdata_float_i,gt2_txdata_i,gt2_txdata_float16_i}),
//        .TXCTRL_OUT                     (),

//        // System Interface
//        .USER_CLK                        (gt2_txusrclk2_i),
//        .SYSTEM_RESET                   (gt2_tx_system_reset_c)
//    );

//    gtwizard_0_GT_FRAME_GEN #
//    (
//        .WORDS_IN_BRAM(EXAMPLE_WORDS_IN_BRAM)
//    )
//    gt3_frame_gen
//    (
//        // User Interface
//        .TX_DATA_OUT                    ({gt3_txdata_float_i,gt3_txdata_i,gt3_txdata_float16_i}),
//        .TXCTRL_OUT                     (),

//        // System Interface
//        .USER_CLK                        (gt3_txusrclk2_i),
//        .SYSTEM_RESET                   (gt3_tx_system_reset_c)
//    );

//    gtwizard_0_GT_FRAME_GEN #
//    (
//        .WORDS_IN_BRAM(EXAMPLE_WORDS_IN_BRAM)
//    )
//    gt4_frame_gen
//    (
//        // User Interface
//        .TX_DATA_OUT                    ({gt4_txdata_float_i,gt4_txdata_i,gt4_txdata_float16_i}),
//        .TXCTRL_OUT                     (),

//        // System Interface
//        .USER_CLK                        (gt4_txusrclk2_i),
//        .SYSTEM_RESET                   (gt4_tx_system_reset_c)
//    );

//    gtwizard_0_GT_FRAME_GEN #
//    (
//        .WORDS_IN_BRAM(EXAMPLE_WORDS_IN_BRAM)
//    )
//    gt5_frame_gen
//    (
//        // User Interface
//        .TX_DATA_OUT                    ({gt5_txdata_float_i,gt5_txdata_i,gt5_txdata_float16_i}),
//        .TXCTRL_OUT                     (),

//        // System Interface
//        .USER_CLK                        (gt5_txusrclk2_i),
//        .SYSTEM_RESET                   (gt5_tx_system_reset_c)
//    );

//    gtwizard_0_GT_FRAME_GEN #
//    (
//        .WORDS_IN_BRAM(EXAMPLE_WORDS_IN_BRAM)
//    )
//    gt6_frame_gen
//    (
//        // User Interface
//        .TX_DATA_OUT                    ({gt6_txdata_float_i,gt6_txdata_i,gt6_txdata_float16_i}),
//        .TXCTRL_OUT                     (),

//        // System Interface
//        .USER_CLK                        (gt6_txusrclk2_i),
//        .SYSTEM_RESET                   (gt6_tx_system_reset_c)
//    );

    //***********************************************************************//
    //                                                                       //
    //------------------------  Frame Checkers  -----------------------------//
    //                                                                       //
    //***********************************************************************//
    // The example design uses Block RAM based frame checkers to verify incoming  
    // data. By default the frame generators are loaded with a data sequence that 
    // matches the outgoing sequence of the frame generators for the TX ports.
    
    // You can modify the expected data sequence by changing the INIT values of the frame
    // checkers in this file. Pay careful attention to bit order and the spacing
    // of your control and alignment characters.
    
    // When the frame checker receives data, it attempts to synchronise to the 
    // incoming pattern by looking for the first sequence in the pattern. Once it 
    // finds the first sequence, it increments through the sequence, and indicates an 
    // error whenever the next value received does not match the expected value.


//    assign gt0_frame_check_reset_i = (EXAMPLE_CONFIG_INDEPENDENT_LANES==0)?reset_on_data_error_i:gt0_matchn_i;

//    // gt0_frame_check0 is always connected to the lane with the start of char 
//    // and this lane starts off the data checking on all the other lanes. The INC_IN port is tied off
//    assign gt0_inc_in_i = 1'b0;

//    gtwizard_0_GT_FRAME_CHECK #
//    (
//.RX_DATA_WIDTH ( 32 ),
//.RXCTRL_WIDTH ( 4 ),
//        .WORDS_IN_BRAM(EXAMPLE_WORDS_IN_BRAM),
//.START_OF_PACKET_CHAR ( 32'h0605047c )
//    )
//    gt0_frame_check
//    (
//        // GT Interface
//        .RX_DATA_IN                     (gt0_rxdata_i),
//        .RXENMCOMMADET_OUT              ( ),
//        .RXENPCOMMADET_OUT              ( ),
//        // System Interface
//        .USER_CLK                       (gt0_rxusrclk2_i),
//        .SYSTEM_RESET                   (gt0_rx_system_reset_c),
//        .ERROR_COUNT_OUT                (gt0_error_count_i),
//        .TRACK_DATA_OUT                 (gt0_track_data_i)
//    );


//    assign gt1_frame_check_reset_i = (EXAMPLE_CONFIG_INDEPENDENT_LANES==0)?reset_on_data_error_i:gt1_matchn_i;

//    // in the "independent lanes" configuration, each of the lanes looks for the unique start char and
//    // in this case, the INC_IN port is tied off.
//    // Else, the data checking is triggered by the "master" lane
//    assign gt1_inc_in_i = (EXAMPLE_CONFIG_INDEPENDENT_LANES==0)?gt0_inc_out_i:1'b0;

//    gtwizard_0_GT_FRAME_CHECK #
//    (
//.RX_DATA_WIDTH ( 32 ),
//.RXCTRL_WIDTH ( 4 ),
//        .WORDS_IN_BRAM(EXAMPLE_WORDS_IN_BRAM),
//.START_OF_PACKET_CHAR ( 32'h0605047c )
//    )
//    gt1_frame_check
//    (
//        // GT Interface
//        .RX_DATA_IN                     (gt1_rxdata_i),
//        .RXENMCOMMADET_OUT              ( ),
//        .RXENPCOMMADET_OUT              ( ),
//        // System Interface
//        .USER_CLK                       (gt1_rxusrclk2_i),
//        .SYSTEM_RESET                   (gt1_rx_system_reset_c),
//        .ERROR_COUNT_OUT                (gt1_error_count_i),
//        .TRACK_DATA_OUT                 (gt1_track_data_i)
//    );


//    assign gt2_frame_check_reset_i = (EXAMPLE_CONFIG_INDEPENDENT_LANES==0)?reset_on_data_error_i:gt2_matchn_i;

//    // in the "independent lanes" configuration, each of the lanes looks for the unique start char and
//    // in this case, the INC_IN port is tied off.
//    // Else, the data checking is triggered by the "master" lane
//    assign gt2_inc_in_i = (EXAMPLE_CONFIG_INDEPENDENT_LANES==0)?gt0_inc_out_i:1'b0;

//    gtwizard_0_GT_FRAME_CHECK #
//    (
//.RX_DATA_WIDTH ( 32 ),
//.RXCTRL_WIDTH ( 4 ),
//        .WORDS_IN_BRAM(EXAMPLE_WORDS_IN_BRAM),
//.START_OF_PACKET_CHAR ( 32'h0605047c )
//    )
//    gt2_frame_check
//    (
//        // GT Interface
//        .RX_DATA_IN                     (gt2_rxdata_i),
//        .RXENMCOMMADET_OUT              ( ),
//        .RXENPCOMMADET_OUT              ( ),
//        // System Interface
//        .USER_CLK                       (gt2_rxusrclk2_i),
//        .SYSTEM_RESET                   (gt2_rx_system_reset_c),
//        .ERROR_COUNT_OUT                (gt2_error_count_i),
//        .TRACK_DATA_OUT                 (gt2_track_data_i)
//    );


//    assign gt3_frame_check_reset_i = (EXAMPLE_CONFIG_INDEPENDENT_LANES==0)?reset_on_data_error_i:gt3_matchn_i;

//    // in the "independent lanes" configuration, each of the lanes looks for the unique start char and
//    // in this case, the INC_IN port is tied off.
//    // Else, the data checking is triggered by the "master" lane
//    assign gt3_inc_in_i = (EXAMPLE_CONFIG_INDEPENDENT_LANES==0)?gt0_inc_out_i:1'b0;

//    gtwizard_0_GT_FRAME_CHECK #
//    (
//.RX_DATA_WIDTH ( 32 ),
//.RXCTRL_WIDTH ( 4 ),
//        .WORDS_IN_BRAM(EXAMPLE_WORDS_IN_BRAM),
//.START_OF_PACKET_CHAR ( 32'h0605047c )
//    )
//    gt3_frame_check
//    (
//        // GT Interface
//        .RX_DATA_IN                     (gt3_rxdata_i),
//        .RXENMCOMMADET_OUT              ( ),
//        .RXENPCOMMADET_OUT              ( ),
//        // System Interface
//        .USER_CLK                       (gt3_rxusrclk2_i),
//        .SYSTEM_RESET                   (gt3_rx_system_reset_c),
//        .ERROR_COUNT_OUT                (gt3_error_count_i),
//        .TRACK_DATA_OUT                 (gt3_track_data_i)
//    );


//    assign gt4_frame_check_reset_i = (EXAMPLE_CONFIG_INDEPENDENT_LANES==0)?reset_on_data_error_i:gt4_matchn_i;

//    // in the "independent lanes" configuration, each of the lanes looks for the unique start char and
//    // in this case, the INC_IN port is tied off.
//    // Else, the data checking is triggered by the "master" lane
//    assign gt4_inc_in_i = (EXAMPLE_CONFIG_INDEPENDENT_LANES==0)?gt0_inc_out_i:1'b0;

//    gtwizard_0_GT_FRAME_CHECK #
//    (
//.RX_DATA_WIDTH ( 32 ),
//.RXCTRL_WIDTH ( 4 ),
//        .WORDS_IN_BRAM(EXAMPLE_WORDS_IN_BRAM),
//.START_OF_PACKET_CHAR ( 32'h0605047c )
//    )
//    gt4_frame_check
//    (
//        // GT Interface
//        .RX_DATA_IN                     (gt4_rxdata_i),
//        .RXENMCOMMADET_OUT              ( ),
//        .RXENPCOMMADET_OUT              ( ),
//        // System Interface
//        .USER_CLK                       (gt4_rxusrclk2_i),
//        .SYSTEM_RESET                   (gt4_rx_system_reset_c),
//        .ERROR_COUNT_OUT                (gt4_error_count_i),
//        .TRACK_DATA_OUT                 (gt4_track_data_i)
//    );


//    assign gt5_frame_check_reset_i = (EXAMPLE_CONFIG_INDEPENDENT_LANES==0)?reset_on_data_error_i:gt5_matchn_i;

//    // in the "independent lanes" configuration, each of the lanes looks for the unique start char and
//    // in this case, the INC_IN port is tied off.
//    // Else, the data checking is triggered by the "master" lane
//    assign gt5_inc_in_i = (EXAMPLE_CONFIG_INDEPENDENT_LANES==0)?gt0_inc_out_i:1'b0;

//    gtwizard_0_GT_FRAME_CHECK #
//    (
//.RX_DATA_WIDTH ( 32 ),
//.RXCTRL_WIDTH ( 4 ),
//        .WORDS_IN_BRAM(EXAMPLE_WORDS_IN_BRAM),
//.START_OF_PACKET_CHAR ( 32'h0605047c )
//    )
//    gt5_frame_check
//    (
//        // GT Interface
//        .RX_DATA_IN                     (gt5_rxdata_i),
//        .RXENMCOMMADET_OUT              ( ),
//        .RXENPCOMMADET_OUT              ( ),
//        // System Interface
//        .USER_CLK                       (gt5_rxusrclk2_i),
//        .SYSTEM_RESET                   (gt5_rx_system_reset_c),
//        .ERROR_COUNT_OUT                (gt5_error_count_i),
//        .TRACK_DATA_OUT                 (gt5_track_data_i)
//    );


//    assign gt6_frame_check_reset_i = (EXAMPLE_CONFIG_INDEPENDENT_LANES==0)?reset_on_data_error_i:gt6_matchn_i;

//    // in the "independent lanes" configuration, each of the lanes looks for the unique start char and
//    // in this case, the INC_IN port is tied off.
//    // Else, the data checking is triggered by the "master" lane
//    assign gt6_inc_in_i = (EXAMPLE_CONFIG_INDEPENDENT_LANES==0)?gt0_inc_out_i:1'b0;

//    gtwizard_0_GT_FRAME_CHECK #
//    (
//.RX_DATA_WIDTH ( 32 ),
//.RXCTRL_WIDTH ( 4 ),
//        .WORDS_IN_BRAM(EXAMPLE_WORDS_IN_BRAM),
//.START_OF_PACKET_CHAR ( 32'h0605047c )
//    )
//    gt6_frame_check
//    (
//        // GT Interface
//        .RX_DATA_IN                     (gt6_rxdata_i),
//        .RXENMCOMMADET_OUT              ( ),
//        .RXENPCOMMADET_OUT              ( ),
//        // System Interface
//        .USER_CLK                       (gt6_rxusrclk2_i),
//        .SYSTEM_RESET                   (gt6_rx_system_reset_c),
//        .ERROR_COUNT_OUT                (gt6_error_count_i),
//        .TRACK_DATA_OUT                 (gt6_track_data_i)
//    );



    assign TRACK_DATA_OUT = track_data_out_i;

    assign track_data_out_i = 
                                gt0_track_data_i &
                                gt1_track_data_i &
                                gt2_track_data_i &
                                gt3_track_data_i &
                                gt4_track_data_i &
                                gt5_track_data_i &
                                gt6_track_data_i ;



























//-------------------------------------------------------------------------------------


//-------------------------Debug Signals assignment--------------------

//------------ optional Ports assignments --------------
 //------GTH/GTP
assign  gt0_rxdfelpmreset_i                  =  tied_to_ground_i;
assign  gt0_rxpmareset_i                     =  tied_to_ground_i;
 //------GTH/GTP
assign  gt1_rxdfelpmreset_i                  =  tied_to_ground_i;
assign  gt1_rxpmareset_i                     =  tied_to_ground_i;
 //------GTH/GTP
assign  gt2_rxdfelpmreset_i                  =  tied_to_ground_i;
assign  gt2_rxpmareset_i                     =  tied_to_ground_i;
 //------GTH/GTP
assign  gt3_rxdfelpmreset_i                  =  tied_to_ground_i;
assign  gt3_rxpmareset_i                     =  tied_to_ground_i;
 //------GTH/GTP
assign  gt4_rxdfelpmreset_i                  =  tied_to_ground_i;
assign  gt4_rxpmareset_i                     =  tied_to_ground_i;
 //------GTH/GTP
assign  gt5_rxdfelpmreset_i                  =  tied_to_ground_i;
assign  gt5_rxpmareset_i                     =  tied_to_ground_i;
 //------GTH/GTP
assign  gt6_rxdfelpmreset_i                  =  tied_to_ground_i;
assign  gt6_rxpmareset_i                     =  tied_to_ground_i;
//------------------------------------------------------
    // assign resets for frame_gen modules
    assign  gt0_tx_system_reset_c = !gt0_txfsmresetdone_r2;
    assign  gt1_tx_system_reset_c = !gt1_txfsmresetdone_r2;
    assign  gt2_tx_system_reset_c = !gt2_txfsmresetdone_r2;
    assign  gt3_tx_system_reset_c = !gt3_txfsmresetdone_r2;
    assign  gt4_tx_system_reset_c = !gt4_txfsmresetdone_r2;
    assign  gt5_tx_system_reset_c = !gt5_txfsmresetdone_r2;
    assign  gt6_tx_system_reset_c = !gt6_txfsmresetdone_r2;

    // assign resets for frame_check modules
    assign  gt0_rx_system_reset_c = !gt0_rxresetdone_r3;
    assign  gt1_rx_system_reset_c = !gt1_rxresetdone_r3;
    assign  gt2_rx_system_reset_c = !gt2_rxresetdone_r3;
    assign  gt3_rx_system_reset_c = !gt3_rxresetdone_r3;
    assign  gt4_rx_system_reset_c = !gt4_rxresetdone_r3;
    assign  gt5_rx_system_reset_c = !gt5_rxresetdone_r3;
    assign  gt6_rx_system_reset_c = !gt6_rxresetdone_r3;

assign gt0_drpaddr_i = 9'd0;
assign gt0_drpdi_i = 16'd0;
assign gt0_drpen_i = 1'b0;
assign gt0_drpwe_i = 1'b0;
assign gt1_drpaddr_i = 9'd0;
assign gt1_drpdi_i = 16'd0;
assign gt1_drpen_i = 1'b0;
assign gt1_drpwe_i = 1'b0;
assign gt2_drpaddr_i = 9'd0;
assign gt2_drpdi_i = 16'd0;
assign gt2_drpen_i = 1'b0;
assign gt2_drpwe_i = 1'b0;
assign gt3_drpaddr_i = 9'd0;
assign gt3_drpdi_i = 16'd0;
assign gt3_drpen_i = 1'b0;
assign gt3_drpwe_i = 1'b0;
assign gt4_drpaddr_i = 9'd0;
assign gt4_drpdi_i = 16'd0;
assign gt4_drpen_i = 1'b0;
assign gt4_drpwe_i = 1'b0;
assign gt5_drpaddr_i = 9'd0;
assign gt5_drpdi_i = 16'd0;
assign gt5_drpen_i = 1'b0;
assign gt5_drpwe_i = 1'b0;
assign gt6_drpaddr_i = 9'd0;
assign gt6_drpdi_i = 16'd0;
assign gt6_drpen_i = 1'b0;
assign gt6_drpwe_i = 1'b0;
assign soft_reset_i = tied_to_ground_i;
endmodule
    

